{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/bikeshare-data.service.ts","webpack:///src/app/error-card/error-card.component.ts","webpack:///src/app/error-card/error-card.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/images.ts","webpack:///src/app/live-search.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/marker.Model.ts","webpack:///src/app/rtdb.model.ts","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/system.model.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","authenticationService","title","window","innerWidth","document","getElementById","style","backgroundImage","photoId","url","innerHTML","hyperlink","attribution","isLoggedIn","Math","floor","random","length","onResize","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","AuthenticationService","afAuth","afDb","router","cookieService","userDetails","get","JSON","parse","signInWithPopup","GoogleAuthProvider","user","set","stringify","navigate","undefined","signOut","sysID","stationID","isFavorite","b","removeFavorite","addFavorite","_","object","uid","query","once","x","val","data","userDataRef","update","remove","userId","userData","valueChanges","pipe","providedIn","BikeshareDataService","http","allSystems","filterArr","retrieveSystemsArray","results","filter","sys","systemID","mapSelectedSystem","mapStationInfoArr","getFeedFromDiscovery","discoveryUrl","mapStationStatusArr","discUrl","feedName","responseType","feeds","result","feed","name","feedUrl","getAllSystemsCsv","split","slice","lines","map","line","d","replace","countryCode","systemName","location","sysArr","station_id","station","max","cutoff","total","num_bikes_available","num_docks_available","empty","full","extraEmpty","extraFull","date","now","Date","timeAgo","getTime","mins","hours","days","months","years","docks","getSlots","newHTML","is_renting","is_returning","i","timeFormat","last_reported","ErrorCardComponent","route","numSeconds","clearInterval","runCountdown","_this","setInterval","updateSeconds","HomeComponent","bikeshareDataService","snackBar","pageLoading","userInfo","getUserData","subscribe","createUserSavedData","system","changeFavorite","message","open","duration","s","stations","st","favorite","setSelectedSystem","obj","key","value","sysData","SystemData","getSystemFromId","getStationInfo","getStationStatus","systemData","push","StationData","displayHtml","generateInfoWindowHTML","Object","entries","getSystemByID","init","assign","backgrounds","LiveSearchService","str","toLowerCase","startsWith","search","getAllSystems","match","LoginComponent","logout","login","onLogin","MapComponent","info_window","google","maps","InfoWindow","content","markers","infoWindows","showErrorCard","getSelectedSystem","snapshot","paramMap","lat","lng","counter","forEach","lon","center","calculateCenter","mapProperties","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","Map","markerProperties","Marker","openSnackBar","openInfoWindowID","isFave","action","marker","event","addListener","close","setContent","findName","handleError","generateMap","err","addMarkers","addInfoWindows","n","m","UserData","UserSystem","UserStation","StationDockInfo","SearchComponent","liveSearchService","errorSelectSystem","searchResults","getAllMatches","target","selectedSystem","unshift","runSearch","System","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","console","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KADqB,EAErB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAFqB,EAGrB;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAHqB,EAIrB;AAAED,UAAI,EAAE,eAAR;AAAyBC,eAAS,EAAE;AAApC,KAJqB,EAKrB;AAAED,UAAI,EAAE,EAAR;AAAYE,gBAAU,EAAE,MAAxB;AAAgCC,eAAS,EAAC;AAA1C,KALqB,CAAvB;;QAYaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACnB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUY;;AAA2B;;AAAQ;;;;;;AACnC;;AAA4B;;AAAO;;;;QDGlCU,Y;AAIX,4BAAoBC,qBAApB,EAAgE;AAAA;;AAA5C,aAAAA,qBAAA,GAAAA,qBAAA;AAHpB,aAAAC,KAAA,GAAQ,gBAAR;AAGmE;;;;mCAE7D;AACN,cAAGC,MAAM,CAACC,UAAP,IAAmB,GAAtB,EAA0B;AACtBC,oBAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,eAAzC,GAA2D,UAAS,oDAAY,KAAKC,OAAjB,EAA0BC,GAAnC,GAAuC,IAAlG;AACAL,oBAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCK,SAAvC,GACE,2FACA,gIADA,GAEA,oDAAY,KAAKF,OAAjB,EAA0BG,SAF1B,GAEoC,IAFpC,GAGA,oDAAY,KAAKH,OAAjB,EAA0BI,WAH1B,GAIA,MALF;AAMD,WARH,MAQS;AACLR,oBAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyCC,eAAzC,GAA2D,4BAA3D;AACD;AACJ;;;qCAES;AACR,iBAAO,KAAKP,qBAAL,CAA2Ba,UAA3B,EAAP;AACD;;;mCAES;AACN,eAAKL,OAAL,GAAeM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,oDAAYC,MAArC,CAAf;AACA,eAAKC,QAAL;AACD;;;;;;;uBA3BUnB,Y,EAAY,8I;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,6Y;AAAA;AAAA;ACdzB;;AAAoB;AAAA,mBAAiB,IAAAmB,QAAA,EAAjB;AAA2B,WAA3B,EAA2B,KAA3B,EAA2B,6DAA3B;;AAClB;;AACE;;AACE;;AAAiB;;AAAsD;;AACvE;;AACE;;AACE;;AAA0B;;AAA0B;;AAAM;;AAAI;;AAAY;;AAC5E;;AACA;;AACE;;AAAoD;;AAA0B;;AAAc;;AAAI;;AAC9F;;AACA;;AACF;;AACF;;AACJ;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;AAboC;;AAAA;;AAClB;;AAAA;;AACA;;AAAA;;;;;;;;;sEDGLnB,Y,EAAY;cALxB,uDAKwB;eALd;AACToB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AEdzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAoDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAhBJ,CACP,uEADO,EAEP,qEAFO,EAGP,4FAHO,EAIP,sEAJO,EAKP,0EALO,EAMP,oEANO,EAOP,yEAPO,EAQP,yEARO,EASP,8EATO,EAUP,qEAVO,EAWP,4FAXO,EAYP,iEAAkBC,aAAlB,CAAgC,uEAAYC,QAA5C,EAAsD,WAAtD,CAZO,EAaP;AACA,+EAdO,CAgBI;;;;0HAGFF,S,EAAS;AAAA,uBA1BlB,2DA0BkB,EAzBlB,wEAyBkB,EAxBlB,+DAwBkB,EAvBlB,oFAuBkB,EAtBlB,sEAsBkB,EArBlB,mEAqBkB;AArBL,kBAGb,uEAHa,EAIb,qEAJa,EAKb,4FALa,EAMb,sEANa,EAOb,0EAPa,EAQb,oEARa,EASb,yEATa,EAUb,yEAVa,EAWb,8EAXa,EAYb,qEAZa,EAab,4FAba,EAaW,gEAbX,EAeb;AACA,iFAhBa;AAqBK,O;AALG,K;;;;;sEAKZA,S,EAAS;cA5BrB,sDA4BqB;eA5BZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,+DAHY,EAIZ,oFAJY,EAKZ,sEALY,EAMZ,mEANY,CADN;AASR3B,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,4FAHO,EAIP,sEAJO,EAKP,0EALO,EAMP,oEANO,EAOP,yEAPO,EAQP,yEARO,EASP,8EATO,EAUP,qEAVO,EAWP,4FAXO,EAYP,iEAAkByB,aAAlB,CAAgC,uEAAYC,QAA5C,EAAsD,WAAtD,CAZO,EAaP;AACA,mFAdO,CATD;AAyBRE,mBAAS,EAAE,EAzBH;AA0BRC,mBAAS,EAAE,CAAC,2DAAD;AA1BH,S;AA4BY,Q;;;;;;;;;;;;;;;;;;ACpDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaC,qB;AAQX,qCAAmBC,MAAnB,EACSC,IADT,EAEUC,MAFV,EAGUC,aAHV,EAGsC;AAAA;;AAHnB,aAAAH,MAAA,GAAAA,MAAA;AACV,aAAAC,IAAA,GAAAA,IAAA;AACC,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AATV,aAAAC,WAAA,GAA6B,IAA7B;AAWC;;;;qCAES;AACR,cAAI,KAAKA,WAAT,EAAsB;AACpB,mBAAO,IAAP;AACD;;AACD,cAAI,KAAKD,aAAL,CAAmBE,GAAnB,CAAuB,MAAvB,MAAmC,EAAvC,EAA2C;AACzC,iBAAKD,WAAL,GAAmBE,IAAI,CAACC,KAAL,CAAW,KAAKJ,aAAL,CAAmBE,GAAnB,CAAuB,MAAvB,CAAX,CAAnB;AACA,mBAAO,IAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;gCAEI;AAAA;;AACH,eAAKL,MAAL,CAAYQ,eAAZ,CACE,IAAI,8CAAcC,kBAAlB,EADF,EAEEvD,IAFF,CAEO,UAAAwD,IAAI,EAAI;AACb,kBAAI,CAACN,WAAL,GAAmBM,IAAI,CAACA,IAAxB;AACA,kBAAI,CAACN,WAAL;;AACA,kBAAI,CAACD,aAAL,CAAmBQ,GAAnB,CAAuB,MAAvB,EAA+BL,IAAI,CAACM,SAAL,CAAe,MAAI,CAACR,WAApB,CAA/B;;AACA,kBAAI,CAACF,MAAL,CAAYW,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACD,WAPD;AAQD;;;iCAEK;AACJ,eAAKV,aAAL,CAAmBQ,GAAnB,CAAuB,MAAvB,EAA+B,EAA/B;AACA,eAAKP,WAAL,GAAmBU,SAAnB;AACA,eAAKd,MAAL,CAAYe,OAAZ,GAAsB7D,IAAtB;AACD;;;uCAEc8D,K,EAAeC,S,EAAiB;AAAA;;AAC7C;AACA,iBAAO,KAAKC,UAAL,CAAgBF,KAAhB,EAAuBC,SAAvB,EAAkC/D,IAAlC,CAAuC,UAAAiE,CAAC,EAAI;AACjD;AAEA,gBAAIA,CAAJ,EAAO;AACL,oBAAI,CAACC,cAAL,CAAoBJ,KAApB,EAA2BC,SAA3B,EAAsC/D,IAAtC;;AACA,qBAAO,KAAP;AACD;;AACD,kBAAI,CAACmE,WAAL,CAAiBL,KAAjB,EAAwBC,SAAxB,EAAmC/D,IAAnC;;AACA,mBAAO,IAAP;AACD,WATM,CAAP;AAUD;;;mCAEU8D,K,EAAeC,S,EAAiB;AACzC,cAAI,CAAC,KAAKb,WAAV,EAAuB;AACrB,mBAAO,IAAIpD,OAAJ,CAAY,UAACC,OAAD,EAAUqE,CAAV;AAAA,qBAAgBrE,OAAO,CAAC,KAAD,CAAvB;AAAA,aAAZ,CAAP;AACD;;AACD,iBAAO,KAAKgD,IAAL,CAAUsB,MAAV,CAAiB,WAAW,KAAKnB,WAAL,CAAiBoB,GAA5B,GAAkC,GAAlC,GAAwCR,KAAxC,GAAgD,GAAhD,GAAsDC,SAAvE,EAAkFQ,KAAlF,CAAwFC,IAAxF,CAA6F,OAA7F,EAAsGxE,IAAtG,CAA2G,UAAAyE,CAAC;AAAA,mBAAKA,CAAC,CAACC,GAAF,KAAU,IAAV,GAAiB,KAAtB;AAAA,WAA5G,CAAP,CAJyC,CAKzC;AACA;AACD;;;oCAEWZ,K,EAAeC,S,EAAiB;AAC1C,cAAIY,IAAI,GAAG,EAAX;AACAA,cAAI,CAAC,MAAMb,KAAN,GAAc,GAAd,GAAoBC,SAArB,CAAJ,GAAsC,IAAtC;AACA,iBAAO,KAAKa,WAAL,CAAiBC,MAAjB,CAAwBF,IAAxB,CAAP;AACD;;;uCAEcb,K,EAAeC,S,EAAiB;AAC7C,iBAAO,KAAKhB,IAAL,CAAUsB,MAAV,CAAiB,WAAW,KAAKnB,WAAL,CAAiBoB,GAA5B,GAAkC,GAAlC,GAAwCR,KAAxC,GAAgD,GAAhD,GAAsDC,SAAvE,EAAkFe,MAAlF,EAAP;AACD;;;sCAEU;AACT,cAAI,KAAKhD,UAAT,EAAqB;AACnB,gBAAMiD,MAAM,GAAG,WAAW,KAAK7B,WAAL,CAAiBoB,GAA3C,CADmB,CAEnB;;AACA,iBAAKM,WAAL,GAAmB,KAAK7B,IAAL,CAAUsB,MAAV,CAAiBU,MAAjB,CAAnB,CAHmB,CAInB;;AACA,iBAAKC,QAAL,GAAgB,KAAKjC,IAAL,CAAUsB,MAAV,CAAiBU,MAAjB,EAAyBE,YAAzB,GAAwCC,IAAxC,CAA6C,4DAAK,CAAL,CAA7C,CAAhB,CALmB,CAMnB;;AACA,mBAAO,KAAKF,QAAZ;AACD;;AACD,iBAAO,gDAAG,IAAH,CAAP;AACD;;;;;;;uBAvFUnC,qB,EAAqB,0H,EAAA,kI,EAAA,8G,EAAA,wH;AAAA,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB,K;AAAA,kBAFpB;;;;;sEAEDA,qB,EAAqB;cAHjC,wDAGiC;eAHtB;AACVsC,oBAAU,EAAE;AADF,S;AAGsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaC,oB;AAMX,oCAAoBC,IAApB,EAA8CpE,qBAA9C,EAA4F;AAAA;;AAAxE,aAAAoE,IAAA,GAAAA,IAAA;AAA0B,aAAApE,qBAAA,GAAAA,qBAAA;AAFtC,aAAAqE,UAAA,GAAuB,EAAvB;AAEuF;;;;sCAEjFxB,K,EAAY;AAAA;;AACxB,cAAG,KAAKwB,UAAL,CAAgBpD,MAAhB,GAAuB,CAA1B,EAA4B;AAC1B,mBAAO,gDAAG,KAAKqD,SAAL,CAAezB,KAAf,CAAH,CAAP;AACD;;AACD,iBAAO,KAAK0B,oBAAL,GAA4BN,IAA5B,CAAiC,2DAAI;AAAA,mBAAM,MAAI,CAACK,SAAL,CAAezB,KAAf,CAAN;AAAA,WAAJ,CAAjC,CAAP;AACD;;;kCAEiBA,K,EAAa;AAC7B,cAAM2B,OAAO,GAAI,KAAKH,UAAL,CAAgBI,MAAhB,CAAuB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,QAAJ,KAAiB9B,KAArB;AAAA,WAA1B,CAAjB;AACE,iBAAQ2B,OAAO,CAACvD,MAAR,KAAmB,CAAnB,GAAuB0B,SAAvB,GAAmC6B,OAAO,CAAC,CAAD,CAAlD;AACH,S,CAED;AACA;AACA;AACA;;;;uCAEeE,G,EAAY;AAAA;;AACzB,cAAG,CAACA,GAAD,IAAQA,GAAG,KAAK,KAAKE,iBAAxB,EAA2C;AACzC,gBAAG,KAAKC,iBAAR,EAA2B;AACzB,qBAAO,gDAAG,KAAKA,iBAAR,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,KAAKC,oBAAL,CAA0B,KAAKF,iBAAL,CAAuBG,YAAjD,EAA+D,qBAA/D,EAAsFd,IAAtF,CACL,2DAAI,UAAAT,CAAC;AAAA,uBAAI,MAAI,CAACqB,iBAAL,GAAyBrB,CAA7B;AAAA,eAAL,CADK,CAAP;AAED;AACF;;AACD,iBAAO,KAAKsB,oBAAL,CAA0BJ,GAAG,CAACK,YAA9B,EAA4C,qBAA5C,CAAP;AACD;;;yCAEgBL,G,EAAY;AAAA;;AAC3B,cAAG,CAACA,GAAD,IAAQA,GAAG,KAAK,KAAKE,iBAAxB,EAA2C;AACzC,gBAAG,KAAKI,mBAAR,EAA6B;AAC3B,qBAAO,gDAAG,KAAKA,mBAAR,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,KAAKF,oBAAL,CAA0B,KAAKF,iBAAL,CAAuBG,YAAjD,EAA+D,gBAA/D,EAAiFd,IAAjF,CACL,2DAAI,UAAAT,CAAC;AAAA,uBAAI,MAAI,CAACwB,mBAAL,GAA2BxB,CAA/B;AAAA,eAAL,CADK,CAAP;AAED;AACF;;AACD,iBAAO,KAAKsB,oBAAL,CAA0BJ,GAAG,CAACK,YAA9B,EAA4C,gBAA5C,CAAP;AACD;;;6CAEqBE,O,EAAiBC,Q,EAAgB;AAAA;;AACnD,iBAAO,KAAKd,IAAL,CAAUlC,GAAV,CAAc+C,OAAd,EAAuB;AAACE,wBAAY,EAAC;AAAd,WAAvB,EAA8ClB,IAA9C,CACC,2DAAI,UAAAT,CAAC;AAAA,mBAAIA,CAAC,CAAC,MAAD,CAAD,CAAU,IAAV,EAAgB,OAAhB,CAAJ;AAAA,WAAL,CADD,EAEC,2DAAI,UAAA4B,KAAK,EAAI;AACX,gBAAMC,MAAM,GAAGD,KAAK,CAACX,MAAN,CAAa,UAACa,IAAD;AAAA,qBAAgBA,IAAI,CAACC,IAAL,KAAcL,QAA9B;AAAA,aAAb,CAAf;AACA,mBAAQG,MAAM,CAACpE,MAAP,GAAc,CAAd,GAAkBoE,MAAM,CAAC,CAAD,CAAN,CAAU5E,GAA5B,GAAkCkC,SAA1C;AAAsD,WAFxD,CAFD,EAMEsB,IANF,CAMO,gEAAS,UAAAuB,OAAO;AAAA,mBAAI,MAAI,CAACpB,IAAL,CAAUlC,GAAV,CAAcsD,OAAd,EAAuB;AAACL,0BAAY,EAAC;AAAd,aAAvB,CAAJ;AAAA,WAAhB,CANP,EAOC,2DAAI,UAAA3B,CAAC;AAAA,mBAAIA,CAAC,CAAC,MAAD,CAAD,CAAU,UAAV,CAAJ;AAAA,WAAL,CAPD,CAAP;AAQH;;;0CAEiBkB,G,EAAW;AAC3B,cAAGA,GAAG,KAAK,KAAKE,iBAAhB,EAAkC;AAChC,iBAAKA,iBAAL,GAAyBF,GAAzB;AACA,iBAAKM,mBAAL,GAA2BrC,SAA3B;AACA,iBAAKkC,iBAAL,GAAyBlC,SAAzB;AACD;AACF;;;4CAEgB;AACf,iBAAO,KAAKiC,iBAAZ;AACD,S,CAED;AACA;AACA;AAEA;;;;2CACwB;AACtB,iBAAO,KAAKR,IAAL,CAAUlC,GAAV,CAAc,iEAAd,EAAiF;AAACiD,wBAAY,EAAE;AAAf,WAAjF,CAAP;AACD;;;wCAEU;AACX,iBAAO,KAAKd,UAAZ;AACD;;;+CAEqB;AAAA;;AAClB;AACA,iBAAO,KAAKoB,gBAAL,GAAwBxB,IAAxB,CACL,2DAAI,UAAAP,IAAI;AAAA,mBAAIA,IAAI,CAACgC,KAAL,CAAW,IAAX,EAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,CAAC,CAA3B,CAAJ;AAAA,WAAR,CADK,EAEL,2DAAI,UAAAC,KAAK;AAAA,mBAAIA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AAC7B,kBAAMC,CAAC,GAAGD,IAAI,CAACE,OAAL,CAAa,uBAAb,EAAsC,MAAtC,EAA8CN,KAA9C,CAAoD,GAApD,CAAV;AACA,qBAAO,IAAI,oDAAJ,CAAW;AACZO,2BAAW,EAAEF,CAAC,CAAC,CAAD,CADF;AAEZG,0BAAU,EAAEH,CAAC,CAAC,CAAD,CAFD;AAGZI,wBAAQ,EAAEJ,CAAC,CAAC,CAAD,CAAD,CAAKC,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAHE;AAIZrB,wBAAQ,EAAEoB,CAAC,CAAC,CAAD,CAJC;AAKZhB,4BAAY,EAAEgB,CAAC,CAAC,CAAD;AALH,eAAX,CAAP;AAQD,aAVY,CAAJ;AAAA,WAAT,CAFK,EAYA9B,IAZA,CAYK,2DAAI,UAAAmC,MAAM;AAAA,mBAAI,MAAI,CAAC/B,UAAL,GAAkB+B,MAAtB;AAAA,WAAV,CAZL,CAAP;AAaD;;;iCAEQtD,S,EAAiB;AACxB,iBAAO,KAAK+B,iBAAL,CAAuBJ,MAAvB,CAA8B,UAAAjB,CAAC;AAAA,mBAAIA,CAAC,CAAC6C,UAAF,KAAiBvD,SAArB;AAAA,WAA/B,EAA+D,CAA/D,EAAkEyC,IAAzE;AACD;;;iCAEQe,O,EAAsB;AAC7B,cAAMC,GAAG,GAAG,EAAZ;AACA,cAAMC,MAAM,GAAG,CAAf;AACA,cAAMC,KAAK,GAAGH,OAAO,CAACI,mBAAR,GAA4BJ,OAAO,CAACK,mBAAlD;AACA,cAAIC,KAAK,GAAG9F,IAAI,CAACC,KAAL,CAAYuF,OAAO,CAACK,mBAAR,GAA4BF,KAA7B,GAAoCF,GAA/C,CAAZ;AACA,cAAIM,IAAI,GAAG/F,IAAI,CAACC,KAAL,CAAYuF,OAAO,CAACI,mBAAR,GAA4BD,KAA7B,GAAoCF,GAA/C,CAAX;;AACA,cAAID,OAAO,CAACI,mBAAR,GAA4BG,IAA7B,IAAsCL,MAAzC,EAAgD;AAC9CK,gBAAI,GAAGP,OAAO,CAACI,mBAAf;AACD;;AACD,cAAIJ,OAAO,CAACK,mBAAR,GAA4BC,KAA7B,IAAuCJ,MAA1C,EAAiD;AAC/CI,iBAAK,GAAGN,OAAO,CAACK,mBAAhB;AACD;;AACD,iBAAO,IAAI,2DAAJ,CAAoB;AACzBC,iBAAK,EAAEA,KADkB;AAEzBC,gBAAI,EAAEA,IAFmB;AAGzBC,sBAAU,EAAER,OAAO,CAACK,mBAAR,GAA8BC,KAHjB;AAIzBG,qBAAS,EAAET,OAAO,CAACI,mBAAR,GAA8BG;AAJhB,WAApB,CAAP;AAMD;;;mCAEUG,I,EAAS;AAClB,cAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACAF,cAAI,GAAG,IAAIE,IAAJ,CAAU,CAACF,IAAD,GAAM,IAAhB,CAAP;AACA,cAAMG,OAAO,GAAGF,GAAG,CAACG,OAAJ,KAAgBJ,IAAI,CAACI,OAAL,EAAhC;;AACA,cAAGD,OAAO,GAAG,OAAK,EAAlB,EAAqB;AAAe;AAClC,mBAAO,eAAP;AACD;;AACD,cAAGA,OAAO,GAAG,OAAK,EAAL,GAAQ,EAArB,EAAwB;AAAY;AAClC,gBAAME,IAAI,GAAGvG,IAAI,CAACC,KAAL,CAAWoG,OAAO,IAAE,OAAK,EAAP,CAAlB,CAAb;AACA,mBAAQE,IAAI,GAAG,MAAP,IAAiBA,IAAI,IAAE,CAAN,GAAU,EAAV,GAAe,GAAhC,IAAuC,MAA/C;AACD;;AACD,cAAGF,OAAO,GAAG,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAxB,EAA2B;AAAS;AAClC,gBAAMG,KAAK,GAAGxG,IAAI,CAACC,KAAL,CAAWoG,OAAO,IAAE,OAAK,EAAL,GAAQ,EAAV,CAAlB,CAAd;AACA,mBAAQG,KAAK,GAAG,OAAR,IAAmBA,KAAK,IAAE,CAAP,GAAW,EAAX,GAAgB,GAAnC,IAA0C,MAAlD;AACD;;AACD,cAAGH,OAAO,GAAG,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAX,GAAc,EAA3B,EAA8B;AAAM;AAClC,gBAAMI,IAAI,GAAGzG,IAAI,CAACC,KAAL,CAAWoG,OAAO,IAAE,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAb,CAAlB,CAAb;AACA,mBAAQI,IAAI,GAAG,MAAP,IAAiBA,IAAI,IAAE,CAAN,GAAU,EAAV,GAAe,GAAhC,IAAuC,MAA/C;AACD;;AACD,cAAGJ,OAAO,GAAG,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAX,GAAc,GAA3B,EAA+B;AAAK;AAClC,gBAAMK,MAAM,GAAG1G,IAAI,CAACC,KAAL,CAAWoG,OAAO,IAAE,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAX,GAAc,EAAhB,CAAlB,CAAf;AACA,mBAAQK,MAAM,GAAG,MAAT,IAAmBA,MAAM,IAAE,CAAR,GAAY,EAAZ,GAAiB,GAApC,IAA2C,MAAnD;AACD;;AACD,cAAMC,KAAK,GAAG3G,IAAI,CAACC,KAAL,CAAWoG,OAAO,IAAE,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAX,GAAc,GAAhB,CAAlB,CAAd;AACA,iBAAOM,KAAK,GAAG,OAAR,IAAmBA,KAAK,IAAE,CAAP,GAAW,EAAX,GAAgB,GAAnC,IAA0C,MAAjD;AACD;;;+CAEsBnB,O,EAAuBzD,K,EAAc;AACxD,cAAM6E,KAAK,GAAG,KAAKC,QAAL,CAAcrB,OAAd,CAAd;AACF,cAAIsB,OAAO,GAAG,EAAd;;AACA,cAAG,EAAEtB,OAAO,CAACuB,UAAR,IAAsBvB,OAAO,CAACwB,YAAhC,CAAH,EAAkD;AAChDF,mBAAO,IAAI,gFAAX;;AACA,gBAAG,CAACtB,OAAO,CAACuB,UAAT,IAAuB,CAACvB,OAAO,CAACwB,YAAnC,EAAiD;AAC/CF,qBAAO,IAAI,yCAAX;AACD,aAFD,MAEO,IAAI,CAACtB,OAAO,CAACuB,UAAb,EAAyB;AAC9BD,qBAAO,IAAI,eAAX;AACD,aAFM,MAEA;AACLA,qBAAO,IAAI,wBAAX;AACD;;AACDA,mBAAO,IAAG,QAAV;AACD;;AACDA,iBAAO,IAAI,oBAAX;;AACA,eAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACL,KAAK,CAACb,IAArB,EAA2BkB,CAAC,EAA5B,EAA+B;AAC7BH,mBAAO,IAAI,4BAAX;AACD;;AACDA,iBAAO,IAAKF,KAAK,CAACX,SAAN,GAAgB,CAAhB,GAAoB,gFAAgFW,KAAK,CAACX,SAAtF,GAAkG,SAAtH,GAAiI,EAA7I;;AAEA,eAAI,IAAIgB,EAAC,GAAC,CAAV,EAAaA,EAAC,GAACL,KAAK,CAACd,KAArB,EAA4BmB,EAAC,EAA7B,EAAgC;AAC9BH,mBAAO,IAAI,6BAAX;AACD;;AACDA,iBAAO,IAAI,CAACF,KAAK,CAACZ,UAAN,GAAiB,CAAjB,GAAqB,iFAAiFY,KAAK,CAACZ,UAAvF,GAAoG,SAAzH,GAAoI,EAArI,IACP,iCADO,GAC6BR,OAAO,CAACI,mBADrC,GAC2D,iBAD3D,IACgFJ,OAAO,CAACI,mBAAR,IAA6B,CAA7B,GAAiC,EAAjC,GAAsC,GADtH,IAEP,aAFO,GAESJ,OAAO,CAACK,mBAFjB,GAEuC,iBAFvC,IAE4DL,OAAO,CAACK,mBAAR,IAA6B,CAA7B,GAAiC,EAAjC,GAAsC,GAFlG,IAEyG,QAFzG,GAGP,qFAHO,GAGiF,KAAKqB,UAAL,CAAgB1B,OAAO,CAAC2B,aAAxB,CAHjF,GAG0H,cAHrI;AAIA,iBAAOL,OAAP;AACD;;;;;;;uBArLUzD,oB,EAAoB,uH,EAAA,qI;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVD,oBAAU,EAAE;AADF,S;AAGqB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACdjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQagE,kB;AAIX,kCAAoBC,KAApB,EACUpG,MADV,EAC0B;AAAA;;AADN,aAAAoG,KAAA,GAAAA,KAAA;AACV,aAAApG,MAAA,GAAAA,MAAA;AAJV,aAAAqG,UAAA,GAAa,EAAb;AAI6B;;;;sCAElB;AACTC,uBAAa,CAAC,KAAKC,YAAN,CAAb;AACD;;;wCAEc;AACX,cAAG,KAAKF,UAAL,IAAiB,CAApB,EAAsB;AACpBC,yBAAa,CAAC,KAAKC,YAAN,CAAb;AACA,iBAAKvG,MAAL,CAAYW,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,WAHD,MAGO;AACL,iBAAK0F,UAAL;AACD;AACF;;;mCAEK;AACN,cAAMG,KAAK,GAAG,IAAd;;AACA,eAAKD,YAAL,GAAoBE,WAAW,CAAC;AAAWD,iBAAK,CAACE,aAAN;AAAsB,WAAlC,EAAoC,IAApC,CAA/B;AACD;;;;;;;uBAvBUP,kB,EAAkB,+H,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,sD;AAAA;AAAA;ACR/B;;AACI;;AAAgB;;AAA0B;;AAAO;;AAAI;;AAAW;;AAChE;;AACI;;AAAG;;AAAgD;;AACnD;;AAAG;;AAA2D;;AAClE;;AACJ;;;;AAFW;;AAAA;;;;;;;;;sEDIEA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT/G,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AER/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCI;;AACI;;AAAqD;;AAAU;;AAC/D;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;;;;;AAmBoB;;AAA0C;;AAAI;;;;;;AAC9C;;AAA0C;;AAAY;;;;;;;;AAJlE;;AACI;;AACI;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtB;;AACA;;AACJ;;AACJ;;AACA;;AACI;;AAAmB;;AAAkB;;AACrC;;AACJ;;AACJ;;;;;;AATqE;;AAAA;;AACnD;;AAAA;;AACA;;AAAA;;AAIS;;AAAA;;AACC;;AAAA;;;;;;;;AAhBhC;;AACI;;AACI;;AACA;;AAA6C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzC;;AAAU;;AAA0B;;AAAO;;AAC/C;;AACJ;;AACA;;AAYJ;;;;;;AAjBQ;;AAAA;;AAKC;;AAAA;;;;QDPJqH,a;AAKX,6BACU1I,qBADV,EAEUmI,KAFV,EAGUpG,MAHV,EAIU4G,oBAJV,EAKUC,QALV,EAK+B;AAAA;;AAJrB,aAAA5I,qBAAA,GAAAA,qBAAA;AACA,aAAAmI,KAAA,GAAAA,KAAA;AACA,aAAApG,MAAA,GAAAA,MAAA;AACA,aAAA4G,oBAAA,GAAAA,oBAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AARV,aAAA7E,QAAA,GAAyB,EAAzB;AACA,aAAA8E,WAAA,GAAc,IAAd;AAQI;;;;mCAEI;AAAA;;AACN,cAAI,CAAC,KAAK7I,qBAAL,CAA2Ba,UAA3B,EAAL,EAA8C;AAC5C,iBAAKkB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,WAFD,MAEO;AACL,iBAAKoG,QAAL,GAAgB,KAAK9I,qBAAL,CAA2BiC,WAA3C;AACA,iBAAKjC,qBAAL,CAA2B+I,WAA3B,GAAyCC,SAAzC,CAAmD,UAACjD,CAAD,EAAO;AACxD,oBAAI,CAACkD,mBAAL,CAAyBlD,CAAzB;AACD,aAFD;AAGD;AACF;;;mCAEUmD,M,EAAoB5C,O,EAAsB;AAAA;;AACnD,eAAKtG,qBAAL,CACGmJ,cADH,CACkBD,MAAM,CAACA,MAAP,CAAcvE,QADhC,EAC0C2B,OAAO,CAAChH,EADlD,EAEGP,IAFH,CAEQ,UAACyE,CAAD,EAAO;AACX,gBAAM4F,OAAO,GAAG5F,CAAC,GACb,8CADa,GAEb,kDAFJ;;AAGA,mBAAI,CAACoF,QAAL,CAAcS,IAAd,CAAmBD,OAAnB,EAA4B,SAA5B,EAAuC;AACrCE,sBAAQ,EAAE;AAD2B,aAAvC;;AAGA,mBAAI,CAACvF,QAAL,CAAc8B,GAAd,CAAkB,UAAA0D,CAAC,EAAI;AACrB,kBAAGA,CAAC,CAACL,MAAF,KAAaA,MAAM,CAACA,MAAvB,EAA8B;AAC5B,uBAAOK,CAAC,CAACC,QAAF,CAAW3D,GAAX,CAAe,UAAA4D,EAAE,EAAI;AAC1B,sBAAGA,EAAE,CAACnK,EAAH,KAAUgH,OAAO,CAAChH,EAArB,EAAwB;AACtBmK,sBAAE,CAACC,QAAH,GAAclG,CAAd;AACD;;AACD,yBAAOiG,EAAP;AACD,iBALM,CAAP;AAMD;;AACD,qBAAOF,CAAP;AACD,aAVD,EAPW,CAkBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,WA7BH;AA+BD;;;gCAEO7E,G,EAAW;AACjB,eAAKiE,oBAAL,CAA0BgB,iBAA1B,CAA4CjF,GAA5C;AACA,eAAK3C,MAAL,CAAYW,QAAZ,CAAqB,CAAC,KAAD,EAAQgC,GAAG,CAACC,QAAZ,CAArB;AACD;;;4CAEmBiF,G,EAAQ;AAAA;;AAAA;AAAA;AAAA,gBAChBC,GADgB;AAAA,gBACXC,KADW;;AAExB;AACA,gBAAIC,OAAO,GAAG,IAAIC,UAAJ,CAAe;AAAER,sBAAQ,EAAE;AAAZ,aAAf,CAAd;;AACA,mBAAI,CAACS,eAAL,CAAqBJ,GAArB,EACG5F,IADH,CAEI,gEAAS,UAACsF,CAAD;AAAA,qBACP,sDACE,OAAI,CAACZ,oBAAL,CAA0BuB,cAA1B,CAAyCX,CAAzC,CADF,EAEE,OAAI,CAACZ,oBAAL,CAA0BwB,gBAA1B,CAA2CZ,CAA3C,CAFF,EAGEtF,IAHF,CAIE,2DAAI,UAACmG,UAAD,EAAgB;AAClBL,uBAAO,CAACb,MAAR,GAAiBK,CAAjB;;AADkB;AAAA;AAAA,sBAERjD,OAFQ;AAAA,sBAECnD,CAFD;;AAGhB,sBAAMkC,MAAM,GAAG+E,UAAU,CAAC,CAAD,CAAV,CAAc3F,MAAd,CACb,UAAC8E,CAAD;AAAA,2BAAOA,CAAC,CAAClD,UAAF,KAAiBC,OAAxB;AAAA,mBADa,EAEb,CAFa,CAAf;AAGAyD,yBAAO,CAACP,QAAR,CAAiBa,IAAjB,CACE,IAAIC,WAAJ,CAAgB;AACd/E,wBAAI,EAAEF,MAAM,CAACE,IADC;AAEdjG,sBAAE,EAAE+F,MAAM,CAACgB,UAFG;AAGdkE,+BAAW,EAAE,OAAI,CAAC5B,oBAAL,CAA0B6B,sBAA1B,CACXJ,UAAU,CAAC,CAAD,CAAV,CAAc3F,MAAd,CACE,UAACjB,CAAD;AAAA,6BAAOA,CAAC,CAAC6C,UAAF,KAAiBC,OAAxB;AAAA,qBADF,EAEE,CAFF,CADW,EAIXiD,CAAC,CAAC5E,QAJS,CAHC;AASd+E,4BAAQ,EAAE;AATI,mBAAhB,CADF,EANgB,CAmBhB;AACA;AACA;AACA;AACA;AACA;AACA;AAzBgB;;AAElB,qDAAyBe,MAAM,CAACC,OAAP,CAAeZ,KAAf,CAAzB,wCAAgD;AAAA;AAwB/C;;AACD,uBAAOC,OAAP;AACD,eA5BD,CAJF,CADO;AAAA,aAAT,CAFJ,EAuCGf,SAvCH,CAuCa,UAACxF,CAAD,EAAO;AAChB,qBAAI,CAACO,QAAL,CAAcsG,IAAd,CAAmB7G,CAAnB;;AACA,qBAAI,CAACqF,WAAL,GAAmB,KAAnB;AACD,aA1CH;AAJwB;;AAC1B,8CAAyB4B,MAAM,CAACC,OAAP,CAAed,GAAf,CAAzB,uCAA8C;AAAA;AA8C7C;AACF;;;wCAEe/G,K,EAAa;AAC3B,iBAAO,KAAK8F,oBAAL,CAA0BgC,aAA1B,CAAwC9H,KAAxC,CAAP;AACD;;;;;;;uBAnHU6F,a,EAAa,8I,EAAA,+H,EAAA,uH,EAAA,6I,EAAA,wI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,ykB;AAAA;AAAA;ACd1B;;AACI;;AAIA;;AACA;;AAQI;;AAoBJ;;AACJ;;;;AAlCoB;;AAAA;;AAIH;;AAAA;;AASJ;;AAAA;;;;;;;;;sEDAAA,a,EAAa;cALzB,uDAKyB;eALf;AACTvH,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;QAuHb2I,U,GAIX,oBAAmBY,IAAnB,EAA+C;AAAA;;AAC7CH,YAAM,CAACI,MAAP,CAAc,IAAd,EAAoBD,IAApB;AACD,K;;QAGUN,W,GAMX,qBAAmBM,IAAnB,EAAgD;AAAA;;AAC9CH,YAAM,CAACI,MAAP,CAAc,IAAd,EAAoBD,IAApB;AACD,K;;;;;;;;;;;;;;;;;AEtJH;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAIE,WAAW,GAAG,CACrB;AACIrK,SAAG,EAAE,4DADT;AAEIG,iBAAW,EAAE,eAFjB;AAGID,eAAS,EAAE;AAHf,KADqB,EAMrB;AACIF,SAAG,EAAE,gEADT;AAEIG,iBAAW,EAAE,mBAFjB;AAGID,eAAS,EAAE;AAHf,KANqB,EAWrB;AACIF,SAAG,EAAE,iEADT;AAEIG,iBAAW,EAAE,oBAFjB;AAGID,eAAS,EAAE;AAHf,KAXqB,EAgBrB;AACIF,SAAG,EAAE,4DADT;AAEIG,iBAAW,EAAE,eAFjB;AAGID,eAAS,EAAE;AAHf,KAhBqB,EAqBrB;AACIF,SAAG,EAAE,4DADT;AAEIG,iBAAW,EAAE,eAFjB;AAGID,eAAS,EAAE;AAHf,KArBqB,EA0BrB;AACIF,SAAG,EAAE,yDADT;AAEIG,iBAAW,EAAE,YAFjB;AAGID,eAAS,EAAE;AAHf,KA1BqB,EA+BrB;AACIF,SAAG,EAAE,2DADT;AAEIG,iBAAW,EAAE,cAFjB;AAGID,eAAS,EAAE;AAHf,KA/BqB,CAAlB;;;;;;;;;;;;;;;;ACAP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaoK,iB;AACX,iCAAoBpC,oBAApB,EAAgE;AAAA;;AAA5C,aAAAA,oBAAA,GAAAA,oBAAA;AAA+C;;;;8BAE7DO,M,EAAgB8B,G,EAAW;AAC/BA,aAAG,GAAGA,GAAG,CAACC,WAAJ,EAAN;AACA,iBAAO/B,MAAM,CAAC/C,QAAP,CAAgB8E,WAAhB,GAA8BC,UAA9B,CAAyCF,GAAzC,KAAiD9B,MAAM,CAAChD,UAAP,CAAkB+E,WAAlB,GAAgCC,UAAhC,CAA2CF,GAA3C,CAAxD;AACD;;;sCAEaG,M,EAAa;AAAA;;AACzB,iBAAO,KAAKxC,oBAAL,CAA0ByC,aAA1B,GAA0C3G,MAA1C,CAAiD,UAAAC,GAAG;AAAA,mBAAI,OAAI,CAAC2G,KAAL,CAAW3G,GAAX,EAAgByG,MAAhB,CAAJ;AAAA,WAApD,CAAP;AACD;;;;;;;uBAVUJ,iB,EAAiB,oI;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACV7G,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaoH,c;AAEX,8BACUtL,qBADV,EAEU4I,QAFV,EAEiC;AAAA;;AADvB,aAAA5I,qBAAA,GAAAA,qBAAA;AACA,aAAA4I,QAAA,GAAAA,QAAA;AAA0B;;;;mCAE5B;AACN,cAAG,KAAK5I,qBAAL,CAA2Ba,UAA3B,EAAH,EAA2C;AACzC,iBAAKb,qBAAL,CAA2BuL,MAA3B;AACA,iBAAK3C,QAAL,CAAcS,IAAd,CAAmB,2BAAnB,EAAgD,SAAhD,EAA2D;AACzDC,sBAAQ,EAAE;AAD+C,aAA3D;AAGD;AACF;;;kCAES;AACR,eAAKtJ,qBAAL,CAA2BwL,KAA3B;AACD;;;;;;;uBAjBUF,c,EAAc,8I,EAAA,wI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,4F;AAAA;AAAA;ACV3B;;AACI;;AAAgB;;AAA0B;;AAAc;;AAAI;;AAAa;;AACzE;;AACI;;AAAG;;AAC8B;;AACjC;;AAAkC;AAAA,mBAAS,IAAAG,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAmB;;AAC7E;;AACJ;;;;;;;;;sEDGaH,c,EAAc;cAL1B,uDAK0B;eALhB;AACTnK,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAA;;;;;;AAMI;;AAAsD;;AAAI;;;;;;AAC1D;;AAAsD;;AAAY;;;;;;AAGlE;;AAA4B;;AAA6B;;;;;;AACzD;;AAA4B;;AAAwB;;;;;;;;AAVxD;;AACE;;AACE;;AACF;;AACA;;AAAuB;AAAA;;AAAA;;AAAA;AAAA;;AACrB;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AAEF;;;;;;AAXI;;AAAA;;AAE4C;;AAAA;;AACzC;;AAAA;;AACA;;AAAA;;AAEkB;;AAAA;;AACf;;AAAA;;AACA;;AAAA;;;;;;AAIV;;AACE;;AACF;;;;QDHaqK,Y;AAaX,4BAAoB/C,oBAApB,EACU3I,qBADV,EAEUmI,KAFV,EAGUpG,MAHV,EAIU6G,QAJV,EAI+B;AAAA;;AAJX,aAAAD,oBAAA,GAAAA,oBAAA;AACV,aAAA3I,qBAAA,GAAAA,qBAAA;AACA,aAAAmI,KAAA,GAAAA,KAAA;AACA,aAAApG,MAAA,GAAAA,MAAA;AACA,aAAA6G,QAAA,GAAAA,QAAA;AAhBV,aAAA3I,KAAA,GAAQ,WAAR;AACQ,aAAA0L,WAAA,GAAc,IAAIC,MAAM,CAACC,IAAP,CAAYC,UAAhB,CAA2B;AAACC,iBAAO,EAAE;AAAV,SAA3B,CAAd;AAMR,aAAAC,OAAA,GAAU,EAAV;AACA,aAAAC,WAAA,GAAc,EAAd;AACA,aAAApD,WAAA,GAAc,IAAd;AACA,aAAAqD,aAAA,GAAgB,KAAhB;AAMkC;;;;mCAE1B;AAAA;;AACN,cAAG,CAAC,KAAKvD,oBAAL,CAA0BwD,iBAA1B,EAAJ,EAAkD;AAChD;AACA,iBAAKxD,oBAAL,CAA0BgC,aAA1B,CAAwC,KAAKxC,KAAL,CAAWiE,QAAX,CAAoBC,QAApB,CAA6BnK,GAA7B,CAAiC,UAAjC,CAAxC,EACG8G,SADH,CACa,UAAAtE,GAAG,EAAI;AAChB,qBAAI,CAACiE,oBAAL,CAA0BgB,iBAA1B,CAA4CjF,GAA5C;;AACA,qBAAI,CAACwF,cAAL;AACD,aAJH;AAKD,WAPD,MAOO;AACL,iBAAKA,cAAL;AACD;;AAED,cAAG,KAAKlK,qBAAL,CAA2Ba,UAA3B,EAAH,EAA4C;AAC1C,iBAAKb,qBAAL,CAA2B+I,WAA3B,GAAyCC,SAAzC;AACD;AACF;;;0CAGc;AACb,cAAIsD,GAAG,GAAG,CAAV;AACA,cAAIC,GAAG,GAAG,CAAV;AACA,cAAIC,OAAO,GAAG,CAAd;AACA,eAAK7D,oBAAL,CAA0B9D,iBAA1B,CAA4C4H,OAA5C,CAAoD,UAAAnG,OAAO,EAAI;AAC7DgG,eAAG,IAAIhG,OAAO,CAACgG,GAAf;AACAC,eAAG,IAAIjG,OAAO,CAACoG,GAAf;AACAF,mBAAO;AACR,WAJD;AAKA,iBAAO,CAACF,GAAG,GAACE,OAAL,EAAcD,GAAG,GAACC,OAAlB,CAAP;AACD;;;sCAEU;AACT,cAAMG,MAAM,GAAG,KAAKC,eAAL,EAAf;AACA,cAAMC,aAAa,GAAG;AACpBF,kBAAM,EAAE,IAAIf,MAAM,CAACC,IAAP,CAAYiB,MAAhB,CAAuBH,MAAM,CAAC,CAAD,CAA7B,EAAkCA,MAAM,CAAC,CAAD,CAAxC,CADY;AAEpBI,gBAAI,EAAE,EAFc;AAGpBC,qBAAS,EAAEpB,MAAM,CAACC,IAAP,CAAYoB,SAAZ,CAAsBC;AAHb,WAAtB;AAKA,eAAKrH,GAAL,GAAW,IAAI+F,MAAM,CAACC,IAAP,CAAYsB,GAAhB,CAAoB/M,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB,EAAoDwM,aAApD,CAAX;AACD;;;qCAES;AAAA;;AACR,cAAIO,gBAAgB,GAAG;AACrBvH,eAAG,EAAE,KAAKA,GADW,CAErB;;AAFqB,WAAvB;AAIA,eAAK8C,oBAAL,CAA0B9D,iBAA1B,CAA4C4H,OAA5C,CAAoD,UAAAnG,OAAO,EAAI;AAEzD8G,4BAAgB,CAAC,UAAD,CAAhB,GAA+B,IAAIxB,MAAM,CAACC,IAAP,CAAYiB,MAAhB,CAAuBxG,OAAO,CAACgG,GAA/B,EAAoChG,OAAO,CAACoG,GAA5C,CAA/B;AACA,mBAAI,CAACV,OAAL,CAAa1F,OAAO,CAACD,UAArB,IAAmC,IAAI,oDAAJ,CAAWC,OAAO,CAACf,IAAnB,EAAyB,IAAIqG,MAAM,CAACC,IAAP,CAAYwB,MAAhB,CAAuBD,gBAAvB,CAAzB,CAAnC;AACL,WAJD;AAKD;;;qCAES;AAAA;;AACR,cAAG,CAAC,KAAKpN,qBAAL,CAA2Ba,UAA3B,EAAJ,EAA4C;AAC1C,iBAAKyM,YAAL,CAAkB,0DAAlB,EAA8E,SAA9E;AACD,WAFD,MAEO;AACL,iBAAKtN,qBAAL,CAA2BmJ,cAA3B,CAA0C,KAAKR,oBAAL,CAA0BwD,iBAA1B,GAA8CxH,QAAxF,EAAkG,KAAK4I,gBAAvG,EACCxO,IADD,CACM,UAAAyE,CAAC,EAAI;AACT,qBAAI,CAACgK,MAAL,GAAchK,CAAd;AACA,kBAAM4F,OAAO,GAAI5F,CAAC,GAAG,8CAAH,GAAoD,kDAAtE;;AACA,qBAAI,CAAC8J,YAAL,CAAkBlE,OAAlB,EAA2B,SAA3B;AACH,aALC;AAMD;AAEF;;;qCAEYA,O,EAAiBqE,M,EAAgB;AAC5C,eAAK7E,QAAL,CAAcS,IAAd,CAAmBD,OAAnB,EAA4BqE,MAA5B,EAAoC;AAClCnE,oBAAQ,EAAE;AADwB,WAApC;AAGD;;;yCAEa;AAAA;;AACZ,eAAKX,oBAAL,CAA0B3D,mBAA1B,CAA8CyH,OAA9C,CAAsD,UAAAnG,OAAO,EAAI;AAE7D,gBAAIoH,MAAM,GAAG,OAAI,CAAC1B,OAAL,CAAa1F,OAAO,CAACD,UAArB,CAAb;;AACA,gBAAGqH,MAAH,EAAU;AACR;AACA;AACA;AACA;AACA9B,oBAAM,CAACC,IAAP,CAAY8B,KAAZ,CAAkBC,WAAlB,CAA8BF,MAAM,CAACA,MAArC,EAA6C,OAA7C,EAAsD,YAAM;AACxD,uBAAI,CAAC/B,WAAL,CAAiBkC,KAAjB;;AACA,uBAAI,CAAClC,WAAL,CAAiBmC,UAAjB,CAA4B,OAAI,CAACtD,sBAAL,CAA4BkD,MAAM,CAACnI,IAAnC,EAAyCe,OAAzC,CAA5B;;AACA,uBAAI,CAACqF,WAAL,CAAiBtC,IAAjB,CAAsB,OAAI,CAACxD,GAA3B,EAAgC6H,MAAM,CAACA,MAAvC;;AACA,uBAAI,CAACH,gBAAL,GAAwBjH,OAAO,CAACD,UAAhC;AAEAuF,sBAAM,CAACC,IAAP,CAAY8B,KAAZ,CAAkBC,WAAlB,CAA8B,OAAI,CAACjC,WAAnC,EAAgD,YAAhD,EAA8D,YAAM;AAClE,yBAAI,CAAC4B,gBAAL,GAAwB5K,SAAxB;AACD,iBAFD;;AAIA,uBAAI,CAACI,UAAL,CAAgB,OAAI,CAACwK,gBAArB,EAAuCxO,IAAvC,CAA4C,UAAAyE,CAAC,EAAI;AAC/C,yBAAI,CAACgK,MAAL,GAAchK,CAAd;AACD,iBAFD,EAVwD,CAc1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC,eAtBH;AAuBD;AACF,WAhCH,EADY,CAoCV;AAEA;AAEF;AACD;;;iCAEQV,S,EAAiB;AACxB,iBAAO,KAAK6F,oBAAL,CAA0BoF,QAA1B,CAAmCjL,SAAnC,CAAP;AACD;;;mCAEUA,S,EAAiB;AAC1B,iBAAO,KAAK9C,qBAAL,CAA2B+C,UAA3B,CAAsC,KAAK4F,oBAAL,CAA0BwD,iBAA1B,GAA8CxH,QAApF,EAA8F7B,SAA9F,CAAP;AACD;;;+CAEsB7C,K,EAAeqG,O,EAAsB;AAC1D,iBAAO,iCAA+BrG,KAA/B,GAAqC,OAArC,GAA6C,KAAK0I,oBAAL,CAA0B6B,sBAA1B,CAAiDlE,OAAjD,CAA7C,GAAuG,QAA9G;AACD;;;yCAEa;AAAA;;AACZ,eAAKqC,oBAAL,CAA0BuB,cAA1B,GACGlB,SADH,CACa,UAAAxF,CAAC,EAAG;AAEX,gBAAGA,CAAC,KAAK,EAAT,EAAY;AACV,qBAAI,CAACwK,WAAL;AACD,aAFD,MAEO;AACH,kBAAG,CAAC,OAAI,CAACnI,GAAT,EAAa;AACX,uBAAI,CAACoI,WAAL;AACD;;AACD,qBAAI,CAAC9D,gBAAL;AACH;AACF,WAXL,EAYI,UAAA+D,GAAG;AAAA,mBAAI,OAAI,CAACF,WAAL,EAAJ;AAAA,WAZP;AAaD;;;2CAEe;AAAA;;AACd,eAAKrF,oBAAL,CAA0BwB,gBAA1B,GACGnB,SADH,CACa,UAAAxF,CAAC,EAAI;AAEZ,mBAAI,CAAC2K,UAAL;;AACA,mBAAI,CAACC,cAAL;;AACA,mBAAI,CAACvF,WAAL,GAAmB,KAAnB;AACD,WANL,EAOI,UAAAqF,GAAG;AAAA,mBAAI,OAAI,CAACF,WAAL,EAAJ;AAAA,WAPP;AAQD;;;sCAEa;AACZ,eAAKnF,WAAL,GAAmB,KAAnB;AACA,eAAKqD,aAAL,GAAqB,IAArB;AACD;;;;;;;uBAhLUR,Y,EAAY,6I,EAAA,8I,EAAA,+H,EAAA,uH,EAAA,wI;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,me;AAAA;AAAA;ACdzB;;AACA;;AAcA;;AAIA;;AACM;;AACF;;;;AArBS;;AACR;;AAAA;;AAcS;;AAAA;;;;;;;;;sEDDDA,Y,EAAY;cALxB,uDAKwB;eALd;AACTvK,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEdzB;AAAA;;;AAAA;AAAA;AAAA;;QAAagM,M,GAIT,gBAAYgB,CAAZ,EAAuBC,CAAvB,EAA4C;AAAA;;AACxC,WAAK/I,IAAL,GAAY8I,CAAZ;AACA,WAAKX,MAAL,GAAcY,CAAd;AACH,K;;;;;;;;;;;;;;;;;ACPL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Q,GAGT,kBAAmB3D,IAAnB,EAA4C;AAAA;;AACxCH,YAAM,CAACI,MAAP,CAAc,IAAd,EAAoBD,IAApB;AACH,K;;QAGQ4D,U;;;;QAKAC,W;;;;QAIAC,e,GAMP,yBAAmB9D,IAAnB,EAAmD;AAAA;;AACjDH,YAAM,CAACI,MAAP,CAAc,IAAd,EAAoBD,IAApB;AACH,K;;;;;;;;;;;;;;;;;ACzBL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACaY;;AAAsD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClD;;AAAM;;AAAkB;;AAAQ;;AAChC;;AAAO;;AAAgB;;AAC3B;;;;;;;;AAHkF;;AACxE;;AAAA;;AACC;;AAAA;;;;;;AAMf;;AAAmD;;AAAyC;;;;QDVvF+D,e;AAKX,+BAAoBC,iBAApB,EACUjG,oBADV,EAEUR,KAFV,EAGUpG,MAHV,EAG0B;AAAA;;AAHN,aAAA6M,iBAAA,GAAAA,iBAAA;AACV,aAAAjG,oBAAA,GAAAA,oBAAA;AACA,aAAAR,KAAA,GAAAA,KAAA;AACA,aAAApG,MAAA,GAAAA,MAAA;AANV,aAAA8M,iBAAA,GAAoB,KAApB;AAM6B;;;;mCAErB;AACN,eAAKlG,oBAAL,CAA0BpE,oBAA1B,GAAiDyE,SAAjD;AACD;;;kCAES2E,K,EAAU;AAAA;;AAClB,eAAKmB,aAAL,GAAqB,KAAKF,iBAAL,CAAuBG,aAAvB,CAAqCpB,KAAK,CAACqB,MAAN,CAAalF,KAAlD,EAAyDrF,MAAzD,CAAgE,UAAAC,GAAG;AAAA,mBAAIA,GAAG,KAAK,OAAI,CAACuK,cAAjB;AAAA,WAAnE,CAArB;;AACA,cAAG,KAAKA,cAAR,EAAuB;AAAC,iBAAKH,aAAL,CAAmBI,OAAnB,CAA2B,KAAKD,cAAhC;AAAiD,WAFvD,CAE2D;;AAC9E;;;qCAEYvK,G,EAAW;AACtB,cAAG,KAAKuK,cAAL,KAAwBvK,GAA3B,EAA+B;AAC7B;AACD,WAFD,MAEO;AACL,iBAAKuK,cAAL,GAAsBvK,GAAtB;AACD;AACF;;;oCAEO;AACN,cAAG,KAAKuK,cAAR,EAAuB;AACrB;AACA,iBAAKtG,oBAAL,CAA0BgB,iBAA1B,CAA4C,KAAKsF,cAAjD;AACA,iBAAKlN,MAAL,CAAYW,QAAZ,CAAqB,CAAC,KAAD,EAAQ,KAAKiG,oBAAL,CAA0BwD,iBAA1B,GAA8CxH,QAAtD,CAArB;AACD,WAJD,MAIO;AACL;AACA,iBAAKkK,iBAAL,GAAyB,IAAzB;AACD;AACF;;;;;;;uBApCUF,e,EAAe,uI,EAAA,6I,EAAA,+H,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,8W;AAAA;AAAA;ACX5B;;AACI;;AACI;;AAA0B;;AAAM;;AAAI;;AACxC;;AACA;;AACI;;AAAsB;;AAAoB;;AAAgB;;AAAQ;;AAAY;;AAAoB;;AAAkB;;AAAO;;AAC/H;;AACA;;AACI;;AACI;;AAAW;;AAAM;;AACjB;;AAAmB;AAAA,mBAAS,IAAAQ,SAAA,QAAT;AAA0B,WAA1B;;AAAnB;;AACJ;;AACA;;AACI;;AAIJ;;AACJ;;AACA;;AACI;;AAA0B;AAAA,mBAAS,iBAAT;AAAmB,WAAnB;;AAAyC;;AAAI;;AACvE;;AACJ;;AAUJ;;;;AAnBiB;;AAAA;;AAQH;;AAAA;;;;;;;;;sEDVDR,e,EAAe;cAL3B,uDAK2B;eALjB;AACTxN,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEX5B;AAAA;;;AAAA;AAAA;AAAA;;QAAa+N,M,GAOT,gBAAmBxE,IAAnB,EAA0C;AAAA;;AACtCH,YAAM,CAACI,MAAP,CAAc,IAAd,EAAoBD,IAApB;AACH,K;;;;;;;;;;;;;;;;;ACTL;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyE,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB9N,cAAQ,EAAE;AACR+N,cAAM,EAAE,yCADA;AAERC,kBAAU,EAAE,iCAFJ;AAGRC,mBAAW,EAAE,wCAHL;AAIRC,iBAAS,EAAE,iBAJH;AAKRC,qBAAa,EAAE,6BALP;AAMRC,yBAAiB,EAAE,cANX;AAORC,aAAK,EAAE,2CAPC;AAQRC,qBAAa,EAAE;AARP;AAFe,KAApB;AAcP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACzBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYR,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBS,eAAzB,CAAyC,yDAAzC,WACS,UAAA7B,GAAG;AAAA,aAAI8B,OAAO,CAACC,KAAR,CAAc/B,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchComponent } from './search/search.component';\nimport { MapComponent } from './map/map.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: 'search', component: SearchComponent },\n  { path: 'login', component: LoginComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'map/:systemID', component: MapComponent},\n  { path: '', redirectTo: 'home', pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, ViewChild, ViewEncapsulation, Input } from '@angular/core';\nimport { BikeshareDataService } from './bikeshare-data.service';\nimport { Feed, StationInfo, StationStatus } from './response-interfaces';\nimport {} from 'googlemaps';\nimport { Marker } from './marker.Model';\nimport { System } from './system.model';\nimport { backgrounds } from './images';\nimport { AuthenticationService } from './authentication.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'BikeshareBuddy';\n  photoId: number;\n\n  constructor(private authenticationService: AuthenticationService){}\n\nonResize():void {\n  if(window.innerWidth>=600){\n      document.getElementById('content').style.backgroundImage = \"url('\"+ backgrounds[this.photoId].url+\"')\";\n      document.getElementById('attribution').innerHTML = \n        '<i class=\"material-icons\" style=\"font-size:small\">panorama</i>&nbsp;Background image: '+\n        '<a style=\"color: var(--navbar-dark);text-decoration: none;border-bottom: 1.5px solid;padding: 0px 2px;\" target=\"_blank\" href=\"'+\n        backgrounds[this.photoId].hyperlink+'\">'+\n        backgrounds[this.photoId].attribution+\n        '</a>';\n    } else {\n      document.getElementById('content').style.backgroundImage = 'var(--background-gradient)';\n    }\n}\n\nisLoggedIn():boolean {\n  return this.authenticationService.isLoggedIn();\n}\n\n  ngOnInit(): void {\n    this.photoId = Math.floor(Math.random()*backgrounds.length);\n    this.onResize();\n  }\n  \n}\n","<div id=\"container\" (window:resize)=\"onResize()\">\n  <div class=\"row navbar\">\n    <mat-toolbar>\n      <a routerLink=''><img class=\"navbar-logo\" src=\"./assets/bb_logo.svg\"/></a>\n      <span style=\"flex:1 1 auto\"></span>\n        <a routerLink=\"search\">\n          <span class=\"navbar-link\"><i class=\"material-icons\">search</i>&nbsp;Search</span>\n        </a>\n        <a routerLink=\"login\">\n          <span class=\"navbar-link\" [ngSwitch]=\"isLoggedIn()\"><i class=\"material-icons\">account_circle</i>&nbsp; \n            <span *ngSwitchCase=\"true\">Sign out</span>\n            <span *ngSwitchCase=\"false\">Sign in</span>\n          </span>\n        </a>\n    </mat-toolbar>\n  </div>\n  <div class=\"row\" id=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n  <div class=\"row\" id=\"footer\">\n    <span id=\"attribution\"></span>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule}  from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './search/search.component';\nimport { MapComponent } from './map/map.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input'; \nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { ErrorCardComponent } from './error-card/error-card.component';\nimport { LoginComponent } from './login/login.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\nimport { HomeComponent } from './home/home.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar'; \n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    MapComponent,\n    ErrorCardComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    AppRoutingModule,\n    MatProgressSpinnerModule,\n    AngularFireModule.initializeApp(environment.firebase, 'bikeshare'),\n    // AngularFirestoreModule,\n    AngularFireAuthModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFireDatabase, AngularFireObject } from '@angular/fire/database';\nimport { auth } from 'firebase/app';\nimport * as firebase from 'firebase';\nimport { Observable, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { map, take } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  user: Observable<firebase.User>;\n  userDetails: firebase.User = null;\n\n  userData: Observable<any>;\n  userDataRef: AngularFireObject<any>;\n  private cookieValue: string;\n\n  constructor(public afAuth: AngularFireAuth,\n    public afDb: AngularFireDatabase,\n    private router: Router,\n    private cookieService: CookieService\n  ) {\n  }\n\n  isLoggedIn(): boolean {\n    if (this.userDetails) {\n      return true;\n    }\n    if (this.cookieService.get('user') !== '') {\n      this.userDetails = JSON.parse(this.cookieService.get('user'));\n      return true;\n    }\n    return false;\n  }\n\n  login(): void {\n    this.afAuth.signInWithPopup(\n      new firebase.auth.GoogleAuthProvider()\n    ).then(user => {\n      this.userDetails = user.user;\n      this.userDetails\n      this.cookieService.set('user', JSON.stringify(this.userDetails));\n      this.router.navigate(['home']);\n    });\n  }\n\n  logout(): void {\n    this.cookieService.set('user', '');\n    this.userDetails = undefined;\n    this.afAuth.signOut().then();\n  }\n\n  changeFavorite(sysID: string, stationID: string): Promise<boolean> {\n    // returns true if station is a favorite after change, false if not\n    return this.isFavorite(sysID, stationID).then(b => {\n      // return true;\n\n      if (b) {\n        this.removeFavorite(sysID, stationID).then();\n        return false;\n      }\n      this.addFavorite(sysID, stationID).then();\n      return true;\n    });\n  }\n\n  isFavorite(sysID: string, stationID: string): Promise<boolean> {\n    if (!this.userDetails) {\n      return new Promise((resolve, _) => resolve(false));\n    }\n    return this.afDb.object('users/' + this.userDetails.uid + '/' + sysID + '/' + stationID).query.once('value').then(x => (x.val() ? true : false));\n    // return this.afDb.object('users/'+this.userDetails.uid+'/'+sysID+'/'+stationID).valueChanges()\n    //   .pipe(map(x=> {console.log('isFavorite observable returned.'); return (x ? true : false)}));\n  }\n\n  addFavorite(sysID: string, stationID: string): Promise<void> {\n    let data = {};\n    data['/' + sysID + '/' + stationID] = true;\n    return this.userDataRef.update(data);\n  }\n\n  removeFavorite(sysID: string, stationID: string): Promise<void> {\n    return this.afDb.object('users/' + this.userDetails.uid + '/' + sysID + '/' + stationID).remove();\n  }\n\n  getUserData(): Observable<any> {\n    if (this.isLoggedIn) {\n      const userId = 'users/' + this.userDetails.uid;\n      // console.log(userId);\n      this.userDataRef = this.afDb.object(userId);\n      // console.log('userdataref:', this.userDataRef);\n      this.userData = this.afDb.object(userId).valueChanges().pipe(take(1));\n      // console.log(this.afDb.object(userId).valueChanges())\n      return this.userData;\n    }\n    return of(null);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, from, of, throwError } from 'rxjs';\nimport { Feed, StationInfo, StationStatus } from './response-interfaces';\nimport { filter, map, find, mergeMap, catchError, retry, tap } from 'rxjs/operators';\nimport { ThrowStmt } from '@angular/compiler';\nimport { System } from './system.model';\nimport { StationDockInfo } from './rtdb.model';\nimport { AuthenticationService } from './authentication.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BikeshareDataService {\n  private mapSelectedSystem: System;\n  mapStationInfoArr: StationInfo[];\n  mapStationStatusArr: StationStatus[];\n  private allSystems: System[] = [];\n\n  constructor(private http: HttpClient, private authenticationService: AuthenticationService) { }\n\n  getSystemByID(sysID:string): Observable<System> {\n    if(this.allSystems.length>0){\n      return of(this.filterArr(sysID));\n    }\n    return this.retrieveSystemsArray().pipe(map(() => this.filterArr(sysID)));\n  }\n\n  private filterArr(sysID: string): System {\n    const results =  this.allSystems.filter(sys => sys.systemID === sysID);\n      return (results.length === 0 ? undefined : results[0]);\n  }\n\n  // getSystemByID(sysID:string): System {\n  //   const results =  this.allSystems.filter(sys => sys.systemID === sysID);\n  //     return (results.length === 0 ? undefined : results[0]);\n  // }\n\n  getStationInfo(sys?: System): Observable<StationInfo[]> {\n    if(!sys || sys === this.mapSelectedSystem) {\n      if(this.mapStationInfoArr) {\n        return of(this.mapStationInfoArr)\n      } else {\n        return this.getFeedFromDiscovery(this.mapSelectedSystem.discoveryUrl, 'station_information').pipe(\n          tap(x => this.mapStationInfoArr = x));\n      }\n    }\n    return this.getFeedFromDiscovery(sys.discoveryUrl, 'station_information');\n  }\n\n  getStationStatus(sys?: System): Observable<StationStatus[]> {\n    if(!sys || sys === this.mapSelectedSystem) {\n      if(this.mapStationStatusArr) {\n        return of(this.mapStationStatusArr)\n      } else {\n        return this.getFeedFromDiscovery(this.mapSelectedSystem.discoveryUrl, 'station_status').pipe(\n          tap(x => this.mapStationStatusArr = x));\n      }\n    }\n    return this.getFeedFromDiscovery(sys.discoveryUrl, 'station_status');\n  }\n\n   getFeedFromDiscovery(discUrl: string, feedName: string): Observable<any> {\n      return this.http.get(discUrl, {responseType:'json'}).pipe(\n              map(x => x['data']['en']['feeds']),\n              map(feeds => {\n                const result = feeds.filter((feed: Feed) => feed.name === feedName);\n                return (result.length>0 ? result[0].url : undefined);}\n              ))\n              .pipe(mergeMap(feedUrl => this.http.get(feedUrl, {responseType:'json'})),\n              map(x => x['data']['stations']));\n  }\n\n  setSelectedSystem(sys: System){\n    if(sys !== this.mapSelectedSystem){\n      this.mapSelectedSystem = sys;\n      this.mapStationStatusArr = undefined;\n      this.mapStationInfoArr = undefined;\n    }\n  }\n\n  getSelectedSystem():System {\n    return this.mapSelectedSystem;\n  }\n\n  // getAllSystems(): System[] {\n  //   return this.allSystems;\n  // }\n\n  // returns only unsanitized csv string\n  private getAllSystemsCsv(): Observable<string>{\n    return this.http.get('https://raw.githubusercontent.com/NABSA/gbfs/master/systems.csv', {responseType: 'text'});\n  }\n\ngetAllSystems(){\n  return this.allSystems;\n}\n\n  retrieveSystemsArray(): Observable<System[]> {\n    // let allSystems = [];\n    return this.getAllSystemsCsv().pipe(\n      map(data => data.split('\\n').slice(1, -1)),\n      map(lines => lines.map(line => {\n        const d = line.replace(/\"([\\w\\W]*),([\\w\\W]*)\"/, \"$1$2\").split(',');\n        return new System({\n              countryCode: d[0],\n              systemName: d[1],\n              location: d[2].replace('\"', ''),\n              systemID: d[3],\n              discoveryUrl: d[5]\n            });\n        \n      }))).pipe(map(sysArr => this.allSystems = sysArr));\n  }\n\n  findName(stationID: string): string {\n    return this.mapStationInfoArr.filter(x => x.station_id === stationID)[0].name;\n  }\n\n  getSlots(station: StationStatus): StationDockInfo {\n    const max = 12;\n    const cutoff = 2;\n    const total = station.num_bikes_available+station.num_docks_available;\n    let empty = Math.floor((station.num_docks_available/total)*max);\n    let full = Math.floor((station.num_bikes_available/total)*max);\n    if((station.num_bikes_available-full) <= cutoff){\n      full = station.num_bikes_available;\n    }\n    if((station.num_docks_available-empty) <= cutoff){\n      empty = station.num_docks_available;\n    }\n    return new StationDockInfo({\n      empty: empty,\n      full: full,\n      extraEmpty: station.num_docks_available - empty,\n      extraFull: station.num_bikes_available - full\n    })\n  }\n\n  timeFormat(date:Date):string {\n    const now = new Date();\n    date = new Date((+date*1000));\n    const timeAgo = now.getTime() - date.getTime();\n    if(timeAgo < 1000*60){              // one minute\n      return '<1 minute ago';\n    }\n    if(timeAgo < 1000*60*60){           // one hour\n      const mins = Math.floor(timeAgo/(1000*60))\n      return  mins + ' min' + (mins==1 ? '' : 's') + ' ago';\n    }\n    if(timeAgo < 1000*60*60*24){        // one day\n      const hours = Math.floor(timeAgo/(1000*60*60))\n      return  hours + ' hour' + (hours==1 ? '' : 's') + ' ago';\n    }\n    if(timeAgo < 1000*60*60*24*30){     // one month\n      const days = Math.floor(timeAgo/(1000*60*60*24))\n      return  days + ' day' + (days==1 ? '' : 's') + ' ago';\n    }\n    if(timeAgo < 1000*60*60*24*365){    // one year\n      const months = Math.floor(timeAgo/(1000*60*60*24*30))\n      return  months + ' day' + (months==1 ? '' : 's') + ' ago';\n    }\n    const years = Math.floor(timeAgo/(1000*60*60*24*365))\n    return years + ' year' + (years==1 ? '' : 's') + ' ago';\n  }\n\n  generateInfoWindowHTML(station:StationStatus, sysID?: string): string {\n      const docks = this.getSlots(station);\n    let newHTML = '';\n    if(!(station.is_renting && station.is_returning)) {\n      newHTML += '<div class=\"warning\"><i class=\"material-icons\">warning</i>&nbsp;Not currently ';\n      if(!station.is_renting && !station.is_returning) {\n        newHTML += 'renting bikes or accepting bike returns';\n      } else if (!station.is_renting) {\n        newHTML += 'renting bikes';\n      } else {\n        newHTML += 'accepting bike returns';\n      }\n      newHTML+= '</div>';\n    }\n    newHTML += '<div class=\"cont\">';\n    for(let i=0; i<docks.full; i++){\n      newHTML += '<span class=\"full\"></span>';\n    }\n    newHTML += (docks.extraFull>0 ? '<span class=\"full moretxt\"><i class=\"material-icons\">add_circle_outline</i>' + docks.extraFull + '</span>': '');\n    \n    for(let i=0; i<docks.empty; i++){\n      newHTML += '<span class=\"empty\"></span>';\n    }\n    newHTML += (docks.extraEmpty>0 ? '<span class=\"empty moretxt\"><i class=\"material-icons\">add_circle_outline</i>' + docks.extraEmpty + '</span>': '')\n      + '</div><div class=\"footer\"><div>' + station.num_bikes_available + ' available bike' + (station.num_bikes_available==1 ? '' : 's')\n      + '</div><div>' + station.num_docks_available + ' available dock' + (station.num_docks_available==1 ? '' : 's') + '</div>'\n      + '<div class=\"timestamp\"><i class=\"material-icons\">watch_later</i>&nbsp;Last updated ' + this.timeFormat(station.last_reported) + '</div></div>';\n    return newHTML;\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-error-card',\n  templateUrl: './error-card.component.html',\n  styleUrls: ['./error-card.component.css']\n})\nexport class ErrorCardComponent implements OnInit, OnDestroy {\n  numSeconds = 10;\n  runCountdown;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnDestroy(): void {\n    clearInterval(this.runCountdown);\n  }\n\n    updateSeconds(): void {\n      if(this.numSeconds==0){\n        clearInterval(this.runCountdown);\n        this.router.navigate(['search']);\n      } else {\n        this.numSeconds--;\n      }\n    }\n\n  ngOnInit(): void {\n    const _this = this;\n    this.runCountdown = setInterval(function(){_this.updateSeconds()}, 1000);\n  }\n\n}\n","<mat-card class=\"with-max\">\n    <mat-card-title><i class=\"material-icons\">warning</i>&nbsp;Oops!</mat-card-title>\n    <mat-card-content>\n        <p>There was a problem with the data you requested.</p>\n        <p>Redirecting you to search page in {{numSeconds}} seconds...</p>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BikeshareDataService } from '../bikeshare-data.service';\nimport { map, mergeMap, tap } from 'rxjs/operators';\nimport { Observable, forkJoin } from 'rxjs';\nimport { System } from '../system.model';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  userInfo: firebase.User;\n  userData: SystemData[] = [];\n  pageLoading = true;\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private bikeshareDataService: BikeshareDataService,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.authenticationService.isLoggedIn()) {\n      this.router.navigate(['search']);\n    } else {\n      this.userInfo = this.authenticationService.userDetails;\n      this.authenticationService.getUserData().subscribe((d) => {\n        this.createUserSavedData(d);\n      });\n    }\n  }\n\n  handleStar(system: SystemData, station: StationData) {\n    this.authenticationService\n      .changeFavorite(system.system.systemID, station.id)\n      .then((x) => {\n        const message = x\n          ? 'The station has been added to your favorites'\n          : 'The station has been removed from your favorites';\n        this.snackBar.open(message, 'Dismiss', {\n          duration: 3000,\n        });\n        this.userData.map(s => {\n          if(s.system === system.system){\n            return s.stations.map(st => {\n              if(st.id === station.id){\n                st.favorite = x;\n              }\n              return st;\n            })\n          }\n          return s;\n        })\n        // this.systems[system.system.systemID].stations.map(st => {\n        //   if(st.station_id === station.id){station.favorite = x;}\n        // });\n        // const r = this.userData.find((sys) => sys === system);\n        // r.stations.forEach((st) => {\n        //   if (st === station) {\n        //     st.favorite = x;\n        //   }\n        // });\n      });\n\n  }\n\n  goToMap(sys: System): void {\n    this.bikeshareDataService.setSelectedSystem(sys);\n    this.router.navigate(['map', sys.systemID]);\n  }\n\n  createUserSavedData(obj: any): void {\n    for (let [key, value] of Object.entries(obj)) {\n      // for each system\n      let sysData = new SystemData({ stations: [] });\n      this.getSystemFromId(key)\n        .pipe(\n          mergeMap((s) =>\n            forkJoin(\n              this.bikeshareDataService.getStationInfo(s),\n              this.bikeshareDataService.getStationStatus(s)\n            ).pipe(\n              map((systemData) => {\n                sysData.system = s;\n                for (let [station, _] of Object.entries(value)) {\n                  const result = systemData[0].filter(\n                    (s) => s.station_id === station\n                  )[0];\n                  sysData.stations.push(\n                    new StationData({\n                      name: result.name,\n                      id: result.station_id,\n                      displayHtml: this.bikeshareDataService.generateInfoWindowHTML(\n                        systemData[1].filter(\n                          (x) => x.station_id === station\n                        )[0],\n                        s.systemID\n                      ),\n                      favorite: true,\n                    })\n                  );\n                  // this.bikeshareDataService.generateInfoWindowHTML(systemData[1].filter(x => x.station_id === station)[0], s.systemID)\n                  //   .then(html => {\n                  //     sysData.stations.push( new StationData({\n                  //       name: systemData[0].filter(s => s.station_id === station)[0].name,\n                  //       displayHtml: html\n                  //     }));\n                  //   });\n                }\n                return sysData;\n              })\n            )\n          )\n        )\n        .subscribe((x) => {\n          this.userData.push(x);\n          this.pageLoading = false;\n        });\n    }\n  }\n\n  getSystemFromId(sysID: string): Observable<System> {\n    return this.bikeshareDataService.getSystemByID(sysID);\n  }\n\n}\n\nexport class SystemData {\n  system: System;\n  stations: StationData[];\n\n  public constructor(init?: Partial<SystemData>) {\n    Object.assign(this, init);\n  }\n}\n\nexport class StationData {\n  name: string;\n  id: string;\n  displayHtml: string;\n  favorite: boolean;\n\n  public constructor(init?: Partial<StationData>) {\n    Object.assign(this, init);\n  }\n}\n","<mat-card class=\"with-max\">\n    <mat-card-title *ngIf=\"userInfo\">\n        <i class=\"material-icons\" style=\"font-size: larger;\">pedal_bike</i>\n        &nbsp;Welcome, {{ userInfo.displayName }}!\n    </mat-card-title>\n    <mat-spinner *ngIf=\"pageLoading\" class=\"loading-spinner\"></mat-spinner>\n    <mat-card-content>\n        <!-- <div *ngFor=\"let system of userData | keyvalue\">\n            {{system.key}}\n            <div *ngFor=\"let station of system.value | keyvalue\">\n                {{station.key}}\n            </div>\n        </div> -->\n\n        <div *ngFor=\"let sys of userData\" class=\"system\">\n            <h2>\n                {{ sys.system.systemName }}\n                <button class=\"mat-raised-button map-button\" (click)=\"goToMap(sys.system)\">\n                    Go to map <i class=\"material-icons\">forward</i>\n                </button>\n            </h2>\n            <div *ngFor=\"let station of sys.stations\" class=\"content\">\n                <span class=\"star\">\n                    <i class=\"material-icons\" (click)=\"handleStar(sys, station)\" [ngSwitch]=\"station.favorite\">\n                        <span *ngSwitchCase=\"true\" class=\"filled\">star</span>\n                        <span *ngSwitchCase=\"false\" class=\"empty\">star_outline</span>\n                    </i>\n                </span>\n                <span class=\"infoWindow\">\n                    <div class=\"title\">{{ station.name }}</div>\n                    <div class=\"status\" [innerHtml]=\"station.displayHtml\"></div>\n                </span>\n            </div>\n        </div>\n    </mat-card-content>\n</mat-card>","export var backgrounds = [\n    {\n        url: './assets/bg_images/julia-stepper-CeFDIMF4Bu4-unsplash.jpg',\n        attribution: 'Viviana Rishe',\n        hyperlink: 'https://unsplash.com/photos/CeFDIMF4Bu4'\n    },\n    {\n        url: './assets/bg_images/morgan-von-gunten-Spx31sWjKZE-unsplash.jpg',\n        attribution: 'Morgan Von Gunten',\n        hyperlink: 'https://unsplash.com/photos/Spx31sWjKZE'\n    },\n    {\n        url: './assets/bg_images/sebastian-herrmann-gPtOEPx_Cjw-unsplash.jpg',\n        attribution: 'Sebastian Herrmann',\n        hyperlink: 'https://unsplash.com/photos/gPtOEPx_Cjw'\n    },\n    {\n        url: './assets/bg_images/viviana-rishe-HukxHhrVeiM-unsplash.jpg',\n        attribution: 'Viviana Rishe',\n        hyperlink: 'https://unsplash.com/photos/HukxHhrVeiM'\n    },\n    {\n        url: './assets/bg_images/viviana-rishe-IOu70_yVBsA-unsplash.jpg',\n        attribution: 'Viviana Rishe',\n        hyperlink: 'https://unsplash.com/photos/IOu70_yVBsA'\n    },\n    {\n        url: './assets/bg_images/victor-xok-Gi0OMNguFaw-unsplash.jpg',\n        attribution: 'Victor Xok',\n        hyperlink: 'https://unsplash.com/photos/Gi0OMNguFaw'\n    },\n    {\n        url: './assets/bg_images/everton-vila-AsahNlC0VhQ-unsplash.jpg',\n        attribution: 'Everton Vila',\n        hyperlink: 'https://unsplash.com/photos/AsahNlC0VhQ'\n    }\n]\n","import { Injectable, OnInit } from '@angular/core';\nimport { BikeshareDataService } from './bikeshare-data.service';\nimport { System } from './system.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LiveSearchService{\n  constructor(private bikeshareDataService: BikeshareDataService) { }\n\n  match(system: System, str: string):boolean {\n    str = str.toLowerCase()\n    return system.location.toLowerCase().startsWith(str) || system.systemName.toLowerCase().startsWith(str);\n  }\n\n  getAllMatches(search:string): System[]{\n    return this.bikeshareDataService.getAllSystems().filter(sys => this.match(sys, search));\n  }\n\n  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    if(this.authenticationService.isLoggedIn()){\n      this.authenticationService.logout();\n      this.snackBar.open('You have been logged out.', 'Dismiss', {\n        duration: 3000\n      });\n    }\n  }\n\n  onLogin() {\n    this.authenticationService.login();\n  }\n}\n","<mat-card class=\"with-max\">\n    <mat-card-title><i class=\"material-icons\">account_circle</i>&nbsp;Sign in</mat-card-title>\n    <mat-card-content>\n        <p>Sign in to BikeshareBuddy with your Google account to save your favorite stations\n            and easily view their status.</p>\n        <button class=\"mat-raised-button\" (click)='onLogin()'>Sign in with Google</button>\n    </mat-card-content>\n</mat-card>\n<!-- <div class=\"g-signin2\" data-onsuccess=\"onSignIn\"></div> -->","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { StationInfo, StationStatus } from '../response-interfaces';\nimport { BikeshareDataService } from '../bikeshare-data.service';\nimport { Marker } from '../marker.Model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { AuthenticationService } from '../authentication.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  title = 'bikeshare';\n  private info_window = new google.maps.InfoWindow({content: ''});\n  openInfoWindowID: string;\n  isFave: boolean;\n  //  mapElement: any\n  // @ViewChild('map', {static:true}) mapElement: any;\n  map: google.maps.Map;\n  markers = {};\n  infoWindows = {};\n  pageLoading = true;\n  showErrorCard = false;\n\n  constructor(private bikeshareDataService: BikeshareDataService,\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private snackBar: MatSnackBar){}\n\n  ngOnInit(): void{\n    if(!this.bikeshareDataService.getSelectedSystem()){\n      // current system not set\n      this.bikeshareDataService.getSystemByID(this.route.snapshot.paramMap.get('systemID'))\n        .subscribe(sys => {\n          this.bikeshareDataService.setSelectedSystem(sys);\n          this.getStationInfo();\n        });\n    } else {\n      this.getStationInfo();\n    }\n\n    if(this.authenticationService.isLoggedIn()) {  \n      this.authenticationService.getUserData().subscribe();\n    }\n  }\n\n\n  calculateCenter(): number[] {\n    let lat = 0;\n    let lng = 0;\n    let counter = 0;\n    this.bikeshareDataService.mapStationInfoArr.forEach(station => {\n      lat += station.lat;\n      lng += station.lon;\n      counter ++;\n    })\n    return [lat/counter, lng/counter];\n  }\n\n  generateMap(){\n    const center = this.calculateCenter();\n    const mapProperties = {\n      center: new google.maps.LatLng(center[0], center[1]),\n      zoom: 12,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n  };\n    this.map = new google.maps.Map(document.getElementById('map'), mapProperties);\n  }\n\n  addMarkers(){\n    let markerProperties = {\n      map: this.map\n      // icon: '.././assets/place-24px.png'\n    }\n    this.bikeshareDataService.mapStationInfoArr.forEach(station => \n        {\n          markerProperties['position'] = new google.maps.LatLng(station.lat, station.lon);\n          this.markers[station.station_id] = new Marker(station.name, new google.maps.Marker(markerProperties));   \n    });\n  }\n\n  handleStar(): void {\n    if(!this.authenticationService.isLoggedIn()){\n      this.openSnackBar('You must be signed in to add a station to your favorites', 'Dismiss');\n    } else {\n      this.authenticationService.changeFavorite(this.bikeshareDataService.getSelectedSystem().systemID, this.openInfoWindowID)\n      .then(x => {\n        this.isFave = x;\n        const message = (x ? 'The station has been added to your favorites' : 'The station has been removed from your favorites');\n        this.openSnackBar(message, 'Dismiss');\n    });\n    }\n    \n  }\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n\n  addInfoWindows(){\n    this.bikeshareDataService.mapStationStatusArr.forEach(station => \n      {\n        let marker = this.markers[station.station_id];\n        if(marker){  \n          // var _this = this;\n          // this.infoWindows[station.station_id] = new google.maps.InfoWindow({\n          //   content:this.generateInfoWindowHTML(marker.name, station)\n          // });\n          google.maps.event.addListener(marker.marker, 'click', () => {\n              this.info_window.close();\n              this.info_window.setContent(this.generateInfoWindowHTML(marker.name, station));\n              this.info_window.open(this.map, marker.marker);\n              this.openInfoWindowID = station.station_id;\n\n              google.maps.event.addListener(this.info_window, 'closeclick', () => {\n                this.openInfoWindowID = undefined;\n              });\n\n              this.isFavorite(this.openInfoWindowID).then(x => {\n                this.isFave = x;\n              });\n\n            // // if(document.querySelector('#button')){\n            //   document.querySelector('#button')\n            //   .addEventListener('click', () => {\n            //     this.handleStar(station.station_id);\n            //     //this.generateInfoWindowHTML(marker.name, station);\n            //   });\n            // // }\n            \n            });\n        }\n      });\n\n\n      // this.waitForElementToDisplay('#button', 500);\n\n      // google.maps.event.addListener(this.info_window, 'domready', () => {\n        \n    // });\n  }\n\n  findName(stationID: string): string {\n    return this.bikeshareDataService.findName(stationID);\n  }\n\n  isFavorite(stationID: string):Promise<boolean> {\n    return this.authenticationService.isFavorite(this.bikeshareDataService.getSelectedSystem().systemID, stationID);\n  }\n\n  generateInfoWindowHTML(title: string, station: StationStatus): string {\n    return '<div class=\"infoWindow\"><h3>'+title+'</h3>'+this.bikeshareDataService.generateInfoWindowHTML(station)+'</div>';\n  }\n\n  getStationInfo(): void {\n    this.bikeshareDataService.getStationInfo()\n      .subscribe(x =>\n        {\n          if(x === []){\n            this.handleError();\n          } else {\n              if(!this.map){\n                this.generateMap();\n              }\n              this.getStationStatus();\n          }\n        },\n        err => this.handleError());\n  }\n\n  getStationStatus(): void {\n    this.bikeshareDataService.getStationStatus()\n      .subscribe(x => \n        {\n          this.addMarkers();\n          this.addInfoWindows();\n          this.pageLoading = false;\n        },\n        err => this.handleError());\n  }\n\n  handleError() {\n    this.pageLoading = false;\n    this.showErrorCard = true;\n  }\n}\n","<mat-spinner *ngIf=\"pageLoading\" class=\"loading-spinner\"></mat-spinner>\n<div *ngIf=\"openInfoWindowID\" id=\"star-container\">\n  <div class=\"title\">\n    {{findName(openInfoWindowID)}}\n  </div>\n  <span class=\"star col\" (click)=\"handleStar()\" [ngSwitch]=\"isFave\">\n    <i *ngSwitchCase=\"true\" class=\"material-icons filled\">star</i>\n    <i *ngSwitchCase=\"false\" class=\"material-icons empty\">star_outline</i>\n  </span>\n  <span class=\"desc col\" [ngSwitch]=\"isFave\">\n    <span *ngSwitchCase=\"true\" >Remove station from favorites</span>\n    <span *ngSwitchCase=\"false\">Add station to favorites</span>\n  </span>\n  \n</div>\n<ng-container *ngIf=\"showErrorCard\">\n  <app-error-card></app-error-card>\n</ng-container>\n\n<div id=\"map-container\">\n      <div id=\"map\"></div>\n    </div>","export class Marker {\n    name: string;\n    marker: google.maps.Marker\n\n    constructor(n: string, m: google.maps.Marker){\n        this.name = n;\n        this.marker = m;\n    }\n}\n","export class UserData {\n    systems: UserSystem[];\n\n    public constructor(init?:Partial<UserData>) {\n        Object.assign(this, init);\n    }\n}\n\nexport class UserSystem {\n    systemID: string;\n    stations: UserStation[];\n}\n\nexport class UserStation {\n    stationID;\n}\n\nexport class StationDockInfo {\n    full: number;\n    extraFull: number;\n    empty: number;\n    extraEmpty: number;\n  \n      public constructor(init?:Partial<StationDockInfo>) {\n        Object.assign(this, init);\n    }\n  }","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { LiveSearchService } from '../live-search.service';\nimport { System } from '../system.model';\nimport { BikeshareDataService } from '../bikeshare-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  searchResults: System[];\n  errorSelectSystem = false;\n  selectedSystem: System;\n\n  constructor(private liveSearchService: LiveSearchService,\n    private bikeshareDataService: BikeshareDataService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.bikeshareDataService.retrieveSystemsArray().subscribe();\n  }\n\n  runSearch(event: any): void{\n    this.searchResults = this.liveSearchService.getAllMatches(event.target.value).filter(sys => sys !== this.selectedSystem);\n    if(this.selectedSystem){this.searchResults.unshift(this.selectedSystem);}    // selected always shows up first in results\n  }\n\n  handleSelect(sys: System):void {\n    if(this.selectedSystem === sys){\n      this.continue();\n    } else {\n      this.selectedSystem = sys;\n    }\n  }\n\n  continue(): void {\n    if(this.selectedSystem){\n      // system has been selected\n      this.bikeshareDataService.setSelectedSystem(this.selectedSystem);\n      this.router.navigate(['map', this.bikeshareDataService.getSelectedSystem().systemID]);\n    } else {\n      // system has not been selected, show error\n      this.errorSelectSystem = true;\n    } \n  }\n\n}\n","<mat-card class=\"with-max\">\n    <mat-card-title>\n        <i class=\"material-icons\">search</i>Search for a System\n    </mat-card-title>\n    <div>\n        Search by system name <span class=\"light\">(eg \"Nice Ride\")</span> or location <span class=\"light\">(eg \"Minneapolis\")</span>. Searching by country is not currently supported.\n    </div>\n    <div>\n        <mat-form-field style=\"width:100%\">\n            <mat-label>Search</mat-label>\n            <input type=\"text\" (keyup)=\"runSearch($event)\" matInput>\n        </mat-form-field>\n        <div class=\"search-results\">\n            <div *ngFor=\"let sys of searchResults\" class=\"result\" (click)=\"handleSelect(sys)\" [class.selected]=\"selectedSystem === sys\">\n                <span>{{sys.systemName}}</span> |\n                <small>{{sys.location}}</small>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button mat-raised-button (click)=\"continue()\" class=\"next-button\">Next</button>\n        <span *ngIf=\"errorSelectSystem\" class=\"error-text\">Please select a system before continuing.</span>\n    </div>\n    \n\n      \n\n<!-- <p *ngFor=\"let sys of searchResults\" (click)=\"setSystem(sys)\">\n    <b>{{sys.systemName}}</b> {{sys.location}}\n</p> -->\n\n\n</mat-card>","export class System {\n    countryCode: string;\n    systemName: string;\n    location: string;\n    systemID: string;\n    discoveryUrl: string;\n\n    public constructor(init?:Partial<System>) {\n        Object.assign(this, init);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDYNH1I2TSqF1mG4txz9RiUE0WyWVx0Zw4\",\n    authDomain: \"bikeshare-ee539.firebaseapp.com\",\n    databaseURL: \"https://bikeshare-ee539.firebaseio.com\",\n    projectId: \"bikeshare-ee539\",\n    storageBucket: \"bikeshare-ee539.appspot.com\",\n    messagingSenderId: \"101519497899\",\n    appId: \"1:101519497899:web:31abce2af00b4ed3e535ee\",\n    measurementId: \"G-HQYPBGLC86\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}