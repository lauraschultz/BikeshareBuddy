{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/bikeshare-data.service.ts","webpack:///src/app/error-card/error-card.component.ts","webpack:///src/app/error-card/error-card.component.html","webpack:///src/app/images.ts","webpack:///src/app/live-search.service.ts","webpack:///src/app/map/map.component.ts","webpack:///src/app/map/map.component.html","webpack:///src/app/marker.Model.ts","webpack:///src/app/search/search.component.ts","webpack:///src/app/search/search.component.html","webpack:///src/app/system.model.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","window","innerWidth","document","getElementById","style","backgroundImage","photoId","url","innerHTML","hyperlink","attribution","Math","floor","random","length","onResize","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BikeshareDataService","http","allSystems","systemError","feedName","get","selectedSystem","discoveryUrl","responseType","pipe","x","feeds","filter","feed","name","sys","console","log","getFeedFromDiscovery","sysID","getSystemsArray","sysArray","results","systemID","undefined","getAllSystemsCsv","data","split","slice","lines","map","line","d","replace","countryCode","systemName","location","sysArr","providedIn","ErrorCardComponent","route","router","numSeconds","clearInterval","runCountdown","navigate","_this","setInterval","updateSeconds","backgrounds","LiveSearchService","bikeshareDataService","system","str","toLowerCase","startsWith","search","getAllSystems","match","MapComponent","switchToSearch","info_window","google","maps","InfoWindow","content","markers","pageLoading","showErrorCard","current_system","snapshot","paramMap","getSelectedSystem","setSystemByID","subscribe","getStationInfo","station","max","cutoff","total","num_bikes_available","num_docks_available","empty","full","StationDockInfo","extraEmpty","extraFull","date","now","Date","timeAgo","getTime","mins","hours","days","months","years","docks","getSlots","newHTML","is_renting","is_returning","i","timeFormat","last_reported","lat","lng","counter","station_info","forEach","lon","center","calculateCenter","mapProperties","LatLng","zoom","mapTypeId","MapTypeId","ROADMAP","Map","mapElement","nativeElement","markerProperties","station_id","Marker","station_status","marker","event","addListener","close","setContent","generateInfoWindowHTML","open","getSystemFeed","getStationStatus","generateMap","err","handleError","addMarkers","addInfoWindows","init","Object","assign","n","m","SearchComponent","liveSearchService","switchToMap","errorSelectSystem","searchResults","getAllMatches","target","value","unshift","setSelectedSystem","runSearch","System","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SearchComponent } from './search/search.component';\nimport { MapComponent } from './map/map.component';\n\nconst routes: Routes = [\n  { path: 'search', component: SearchComponent },\n  { path: 'map/:systemID', component: MapComponent},\n  { path: '', redirectTo: 'search', pathMatch:'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, ViewChild, ViewEncapsulation, Input } from '@angular/core';\nimport { BikeshareDataService } from './bikeshare-data.service';\nimport { Feed, StationInfo, StationStatus } from './response-interfaces';\nimport {} from 'googlemaps';\nimport { Marker } from './marker.Model';\nimport { System } from './system.model';\nimport { backgrounds } from './images';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'BikeshareBuddy';\n  photoId: number;\n\nonResize():void {\n  if(window.innerWidth>=600){\n      document.getElementById('content').style.backgroundImage = \"url('\"+ backgrounds[this.photoId].url+\"')\";\n      document.getElementById('attribution').innerHTML = \n        '<i class=\"material-icons\" style=\"font-size:small\">panorama</i>&nbsp;Background image: '+\n        '<a style=\"color: var(--navbar-dark);text-decoration: none;border-bottom: 1.5px solid;padding: 0px 2px;\" target=\"_blank\" href=\"'+\n        backgrounds[this.photoId].hyperlink+'\">'+\n        backgrounds[this.photoId].attribution+\n        '</a>';\n    } else {\n      document.getElementById('content').style.backgroundImage = 'var(--background-gradient)';\n    }\n}\n\n  ngOnInit(): void {\n    this.photoId = Math.floor(Math.random()*backgrounds.length);\n    this.onResize();\n  }\n  \n}\n","<div class=\"container\" (window:resize)=\"onResize()\">\n  <div class=\"row navbar\">\n    <mat-toolbar>\n  <a routerLink=''><img class=\"navbar-logo\" src=\"../assets/bb_logo.svg\"/></a>\n</mat-toolbar>\n  </div>\n  <div class=\"row\" id=\"content\">\n    <router-outlet></router-outlet>\n  </div>\n  <div class=\"row\" id=\"footer\">\n    <span id=\"attribution\"></span>\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule}  from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './search/search.component';\nimport { MapComponent } from './map/map.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input'; \nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { ErrorCardComponent } from './error-card/error-card.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    MapComponent,\n    ErrorCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatSelectModule,\n    AppRoutingModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, from, of, throwError } from 'rxjs';\nimport { Feed, StationInfo, StationStatus } from './response-interfaces';\nimport { filter, map, find, mergeMap, catchError, retry } from 'rxjs/operators';\nimport { ThrowStmt } from '@angular/compiler';\nimport { System } from './system.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BikeshareDataService {\n  private feeds: Observable<Feed[]>;\n  private selectedSystem: System;\n  private allSystems: System[] = [];\n  systemError = false;\n\n  constructor(private http: HttpClient) { }\n\n  // return feed url of feedName from the currently selected system\n  getFeedFromDiscovery(feedName): Observable<string> {\n      return this.http.get(this.selectedSystem.discoveryUrl, {responseType:'json'}).pipe(\n              map(x => x['data']['en']['feeds']),\n              map(feeds => feeds.filter((feed: Feed)=> feed.name === feedName)[0].url)\n              );\n  }\n\n  setSelectedSystem(sys: System){\n    console.log('system set:', sys)\n    this.selectedSystem = sys;\n  }\n\n  getSelectedSystem():System {\n    return this.selectedSystem;\n  }\n\n  getAllSystems(): System[] {\n    return this.allSystems;\n  }\n\n  // returns only unsanitized csv string\n  getAllSystemsCsv(): Observable<string>{\n    return this.http.get('https://raw.githubusercontent.com/NABSA/gbfs/master/systems.csv', {responseType: 'text'});\n  }\n\n  getSystemFeed(feedName: string){\n    return this.getFeedFromDiscovery(feedName)\n        .pipe(mergeMap(feed => this.http.get(feed, {responseType:'json'})),\n              map(x => {this.systemError = false; return x['data']['stations']}))\n        .pipe(retry(2));\n  }\n\n  // private handleError(error: HttpErrorResponse) {\n  //   // if (error.error instanceof ErrorEvent) {\n  //   //   // A client-side or network error occurred. Handle it accordingly.\n  //   //   console.error('An error occurred:', error.error.message);\n  //   // } else {\n  //   //   // The backend returned an unsuccessful response code.\n  //   //   // The response body may contain clues as to what went wrong,\n  //   //   console.error(\n  //   //     `Backend returned code ${error.status}, ` +\n  //   //     `body was: ${error.error}`);\n  //   // }\n  //   // return an observable with a user-facing error message\n  //   this.systemError = true;\n  //   return throwError(\n  //     'Something bad happened; please try again later.');\n  // };\n\n  // sets selected system according to given systemID\n  setSystemByID(sysID): Observable<void> {\n    return this.getSystemsArray().pipe(map(sysArray => {\n      console.log('allsystems is: ', this.allSystems);\n      const results = this.allSystems.filter(sys => sys.systemID==sysID);\n      this.selectedSystem = (results.length == 0 ? undefined : results[0]);\n    }));\n}\n\n  getSystemsArray(): Observable<System[]> {\n    // let allSystems = [];\n    return this.getAllSystemsCsv().pipe(\n      map(data => data.split('\\n').slice(1, -1)),\n      map(lines => lines.map(line => {\n        //line = line.replace(/\"([\\w\\W]*),([\\w\\W]*)\"/, \"$1$2\"); // fix problem with comma in the location name\n        const d = line.replace(/\"([\\w\\W]*),([\\w\\W]*)\"/, \"$1$2\").split(',');\n        return new System({\n              countryCode: d[0],\n              systemName: d[1],\n              location: d[2].replace('\"', ''),\n              systemID: d[3],\n              discoveryUrl: d[5]\n            });\n        \n      }))).pipe(map(sysArr => this.allSystems = sysArr));\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-error-card',\n  templateUrl: './error-card.component.html',\n  styleUrls: ['./error-card.component.css']\n})\nexport class ErrorCardComponent implements OnInit, OnDestroy {\n  numSeconds = 10;\n  runCountdown;\n\n  constructor(private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnDestroy(): void {\n    clearInterval(this.runCountdown);\n  }\n\n    updateSeconds(): void {\n      if(this.numSeconds==0){\n        clearInterval(this.runCountdown);\n        this.router.navigate(['search']);\n      } else {\n        this.numSeconds--;\n      }\n    }\n\n  ngOnInit(): void {\n    const _this = this;\n    this.runCountdown = setInterval(function(){_this.updateSeconds()}, 1000);\n  }\n\n}\n","<mat-card class=\"with-max\">\n    <mat-card-title><i class=\"material-icons\">warning</i>&nbsp;Oops!</mat-card-title>\n    <mat-card-content>\n        <p>There was a problem with the data you requested.</p>\n        <p>Redirecting you to search page in {{numSeconds}} seconds...</p>\n    </mat-card-content>\n</mat-card>","export var backgrounds = [\n    {\n        url: '../assets/bg_images/julia-stepper-CeFDIMF4Bu4-unsplash.jpg',\n        attribution: 'Viviana Rishe',\n        hyperlink: 'https://unsplash.com/photos/CeFDIMF4Bu4'\n    },\n    {\n        url: '../assets/bg_images/morgan-von-gunten-Spx31sWjKZE-unsplash.jpg',\n        attribution: 'Morgan Von Gunten',\n        hyperlink: 'https://unsplash.com/photos/Spx31sWjKZE'\n    },\n    {\n        url: '../assets/bg_images/sebastian-herrmann-gPtOEPx_Cjw-unsplash.jpg',\n        attribution: 'Sebastian Herrmann',\n        hyperlink: 'https://unsplash.com/photos/gPtOEPx_Cjw'\n    },\n    {\n        url: '../assets/bg_images/viviana-rishe-HukxHhrVeiM-unsplash.jpg',\n        attribution: 'Viviana Rishe',\n        hyperlink: 'https://unsplash.com/photos/HukxHhrVeiM'\n    },\n    {\n        url: '../assets/bg_images/viviana-rishe-IOu70_yVBsA-unsplash.jpg',\n        attribution: 'Viviana Rishe',\n        hyperlink: 'https://unsplash.com/photos/IOu70_yVBsA'\n    },\n    {\n        url: '../assets/bg_images/victor-xok-Gi0OMNguFaw-unsplash.jpg',\n        attribution: 'Victor Xok',\n        hyperlink: 'https://unsplash.com/photos/Gi0OMNguFaw'\n    },\n    {\n        url: '../assets/bg_images/everton-vila-AsahNlC0VhQ-unsplash.jpg',\n        attribution: 'Everton Vila',\n        hyperlink: 'https://unsplash.com/photos/AsahNlC0VhQ'\n    }\n]\n","import { Injectable, OnInit } from '@angular/core';\nimport { BikeshareDataService } from './bikeshare-data.service';\nimport { System } from './system.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LiveSearchService{\n  constructor(private bikeshareDataService: BikeshareDataService) { }\n\n  match(system: System, str: string):boolean {\n    str = str.toLowerCase()\n    return system.location.toLowerCase().startsWith(str) || system.systemName.toLowerCase().startsWith(str);\n  }\n\n  getAllMatches(search:string): System[]{\n    return this.bikeshareDataService.getAllSystems().filter(sys => this.match(sys, search));\n  }\n\n  \n\n}\n","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { StationInfo, StationStatus } from '../response-interfaces';\nimport { BikeshareDataService } from '../bikeshare-data.service';\nimport { Marker } from '../marker.Model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.css']\n})\nexport class MapComponent implements OnInit {\n  @Output() switchToSearch  = new EventEmitter<boolean>()\n  title = 'bikeshare';\n  private station_info: StationInfo[];\n  private station_status: StationStatus[];\n  private current_system:string;\n  private info_window = new google.maps.InfoWindow({content: ''});\n  @ViewChild('map', {static:true}) mapElement: any;\n  map: google.maps.Map;\n  markers = {};\n  pageLoading = true;\n  showErrorCard = false;\n\n  constructor(private bikeshareDataService: BikeshareDataService,private route: ActivatedRoute,\n    private router: Router){}\n\n  ngOnInit(){\n    this.current_system = this.route.snapshot.paramMap.get('systemID');\n    console.log('the system id is ' + this.current_system);\n    if(!this.bikeshareDataService.getSelectedSystem()){\n      // current system not set\n      this.bikeshareDataService.setSystemByID(this.current_system).subscribe(() => this.getStationInfo());\n      // console.log('now current system is ' + this.bikeshareDataService.getSelectedSystem());\n    } else {\n    this.getStationInfo();}\n  }\n\n  getSlots(station: StationStatus): StationDockInfo {\n    const max = 15;\n    const cutoff = 2;\n    const total = station.num_bikes_available+station.num_docks_available;\n    let empty = Math.floor((station.num_docks_available/total)*max);\n    let full = Math.floor((station.num_bikes_available/total)*max);\n    if((station.num_bikes_available-full) <= cutoff){\n      full = station.num_bikes_available;\n    }\n    if((station.num_docks_available-empty) <= cutoff){\n      empty = station.num_docks_available;\n    }\n    return new StationDockInfo({\n      empty: empty,\n      full: full,\n      extraEmpty: station.num_docks_available - empty,\n      extraFull: station.num_bikes_available - full\n    })\n  }\n\n  timeFormat(date:Date):string {\n    const now = new Date();\n    date = new Date((+date*1000));\n    const timeAgo = now.getTime() - date.getTime();\n    if(timeAgo < 1000*60){              // one minute\n      return '<1 minute ago';\n    }\n    if(timeAgo < 1000*60*60){           // one hour\n      const mins = Math.floor(timeAgo/(1000*60))\n      return  mins + ' min' + (mins==1 ? '' : 's') + ' ago';\n    }\n    if(timeAgo < 1000*60*60*24){        // one day\n      const hours = Math.floor(timeAgo/(1000*60*60))\n      return  hours + ' hour' + (hours==1 ? '' : 's') + ' ago';\n    }\n    if(timeAgo < 1000*60*60*24*30){     // one month\n      const days = Math.floor(timeAgo/(1000*60*60*24))\n      return  days + ' day' + (days==1 ? '' : 's') + ' ago';\n    }\n    if(timeAgo < 1000*60*60*24*365){    // one year\n      const months = Math.floor(timeAgo/(1000*60*60*24*30))\n      return  months + ' day' + (months==1 ? '' : 's') + ' ago';\n    }\n    const years = Math.floor(timeAgo/(1000*60*60*24*365))\n    return years + ' year' + (years==1 ? '' : 's') + ' ago';\n  }\n\n  generateInfoWindowHTML(title:string, station:StationStatus):string {\n    const docks = this.getSlots(station);\n    let newHTML = '<div class=\"infoWindow\"><h3>'+title+'</h3>';\n    if(!(station.is_renting && station.is_returning)) {\n      newHTML += '<div class=\"warning\"><i class=\"material-icons\">warning</i>&nbsp;Not currently ';\n      if(!station.is_renting && !station.is_returning) {\n        newHTML += 'renting bikes or accepting bike returns';\n      } else if (!station.is_renting) {\n        newHTML += 'renting bikes';\n      } else {\n        newHTML += 'accepting bike returns';\n      }\n      newHTML+= '</div>';\n    }\n    newHTML += '<div class=\"cont\">';\n    for(let i=0; i<docks.full; i++){\n      newHTML += '<span class=\"full\"></span>';\n    }\n    newHTML += (docks.extraFull>0 ? '<span class=\"full moretxt\"><i class=\"material-icons\">add_circle_outline</i>' + docks.extraFull + '</span>': '');\n    \n    for(let i=0; i<docks.empty; i++){\n      newHTML += '<span class=\"empty\"></span>';\n    }\n    newHTML += (docks.extraEmpty>0 ? '<span class=\"empty moretxt\"><i class=\"material-icons\">add_circle_outline</i>' + docks.extraEmpty + '</span>': '');\n    \n    newHTML += '</div><div class=\"footer\"><div>' + station.num_bikes_available + ' available bike' + (station.num_bikes_available==1 ? '' : 's') + '</div>';\n    newHTML += '<div>' + station.num_docks_available + ' available dock' + (station.num_docks_available==1 ? '' : 's') + '</div>';\n    newHTML += '<div class=\"timestamp\"><i class=\"material-icons\">watch_later</i>&nbsp;Last updated ' + this.timeFormat(station.last_reported) + '</div></div></div>';\n    return newHTML\n  }\n\n  calculateCenter(): number[] {\n    let lat = 0;\n    let lng = 0;\n    let counter = 0;\n    this.station_info.forEach(station => {\n      lat += station.lat;\n      lng += station.lon;\n      counter ++;\n    })\n    return [lat/counter, lng/counter];\n  }\n\n  generateMap() {\n    const center = this.calculateCenter();\n    const mapProperties = {\n      center: new google.maps.LatLng(center[0], center[1]),\n      zoom: 10,\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n  };\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapProperties);\n  }\n\n  addMarkers(){\n    let markerProperties = {\n      map: this.map\n      // icon: '../../assets/place-24px.png'\n    }\n    this.station_info.forEach(station => \n        {\n          markerProperties['position'] = new google.maps.LatLng(station.lat, station.lon);\n          this.markers[station.station_id] = new Marker(station.name, new google.maps.Marker(markerProperties));\n          \n    });\n  }\n\n  addInfoWindows(){\n    this.station_status.forEach(station => \n      {\n        let marker = this.markers[station.station_id];\n        var _this = this;\n        google.maps.event.addListener(marker.marker, 'click', function() {\n          _this.info_window.close();\n          _this.info_window.setContent(_this.generateInfoWindowHTML(marker.name, station));\n          _this.info_window.open(_this.map, marker.marker);\n        }); \n      })\n  }\n\n  getStationInfo() {\n    this.bikeshareDataService.getSystemFeed('station_information')\n      .subscribe(x =>\n        {\n          // console.log('got station info:', x);\n          this.station_info = x;\n          this.getStationStatus();\n          if(!this.map){\n            this.generateMap();\n          }\n        },\n        err => this.handleError());\n  }\n\n  getStationStatus() {\n    this.bikeshareDataService.getSystemFeed('station_status')\n      .subscribe(x => \n        {\n          // console.log('got station status:', x);\n          this.station_status = x;\n          this.addMarkers();\n          this.addInfoWindows();\n          this.pageLoading = false;\n        },\n        err => this.handleError());\n  }\n\n  handleError() {\n    this.pageLoading = false;\n    this.showErrorCard = true;\n  }\n}\n\nexport class StationDockInfo {\n  full: number;\n  extraFull: number;\n  empty: number;\n  extraEmpty: number;\n\n    public constructor(init?:Partial<StationDockInfo>) {\n      Object.assign(this, init);\n  }\n}","<mat-spinner *ngIf=\"pageLoading\" class=\"loading-spinner\"></mat-spinner>\n<ng-container *ngIf=\"showErrorCard\">\n  <app-error-card></app-error-card>\n</ng-container>\n\n<div id=\"map-container\">\n      <div #map></div>\n    </div>","export class Marker {\n    name: string;\n    marker: google.maps.Marker\n\n    constructor(n: string, m: google.maps.Marker){\n        this.name = n;\n        this.marker = m;\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { LiveSearchService } from '../live-search.service';\nimport { System } from '../system.model';\nimport { BikeshareDataService } from '../bikeshare-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n  @Output() switchToMap  = new EventEmitter<boolean>()\n  searchResults: System[];\n  errorSelectSystem = false;\n  selectedSystem: System;\n\n  constructor(private liveSearchService: LiveSearchService,\n    private bikeshareDataService: BikeshareDataService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.bikeshareDataService.getSystemsArray().subscribe();\n  }\n\n  runSearch(event: any){\n    this.searchResults = this.liveSearchService.getAllMatches(event.target.value).filter(sys => sys !== this.selectedSystem);\n    if(this.selectedSystem){this.searchResults.unshift(this.selectedSystem);}    // selected always shows up first in results\n  }\n\n  continue() {\n    if(this.selectedSystem){\n      // system has been selected\n      this.bikeshareDataService.setSelectedSystem(this.selectedSystem);\n      this.router.navigate(['map', this.bikeshareDataService.getSelectedSystem().systemID])\n    } else {\n      // system has not been selected, show error\n      this.errorSelectSystem = true;\n    } \n  }\n\n}\n","<mat-card class=\"with-max\">\n    <mat-card-title>\n        <i class=\"material-icons\">search</i>Search for a System\n    </mat-card-title>\n    <div>\n        Search by system name <span class=\"light\">(eg \"Nice Ride\")</span> or location <span class=\"light\">(eg \"Minneapolis\")</span>. Searching by country is not currently supported.\n    </div>\n    <div>\n        <mat-form-field style=\"width:100%\">\n            <mat-label>Search</mat-label>\n            <input type=\"text\" (keyup)=\"runSearch($event)\" matInput>\n        </mat-form-field>\n        <div class=\"search-results\">\n            <div *ngFor=\"let sys of searchResults\" class=\"result\" (click)=\"selectedSystem=sys\" [class.selected]=\"selectedSystem === sys\">\n                <span>{{sys.systemName}}</span> |\n                <small>{{sys.location}}</small>\n            </div>\n        </div>\n    </div>\n    <div>\n        <button mat-raised-button (click)=\"continue()\" class=\"next-button\">Next</button>\n        <span *ngIf=\"errorSelectSystem\" class=\"error-text\">Please select a system before continuing.</span>\n    </div>\n    \n\n      \n\n<!-- <p *ngFor=\"let sys of searchResults\" (click)=\"setSystem(sys)\">\n    <b>{{sys.systemName}}</b> {{sys.location}}\n</p> -->\n\n\n</mat-card>","export class System {\n    countryCode: string;\n    systemName: string;\n    location: string;\n    systemID: string;\n    discoveryUrl: string;\n\n    public constructor(init?:Partial<System>) {\n        Object.assign(this, init);\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}